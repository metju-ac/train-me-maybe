version: '3.8'

services:
  postgres:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: train_me_maybe_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'" ]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  multi-user-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      REGIOJET_DB_HOST: ${REGIOJET_DB_HOST:-localhost}
      REGIOJET_DB_PORT: ${REGIOJET_DB_PORT:-5432}
      REGIOJET_DB_USER: ${REGIOJET_DB_USER:-user}
      REGIOJET_DB_PASSWORD: ${REGIOJET_DB_PASSWORD:-password}
      REGIOJET_DB_NAME: ${REGIOJET_DB_NAME:-train_me_maybe_db}
      REGIOJET_SMTP_USERNAME: ${REGIOJET_SMTP_USERNAME:-username@gmail.com}
      REGIOJET_SMTP_PASSWORD: ${REGIOJET_SMTP_PASSWORD:-app_password}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-secretkey}
    ports:
      - "8080:8080"

volumes:
  postgres_data: