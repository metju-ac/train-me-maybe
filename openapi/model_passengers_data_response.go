/*
RegioJet's Affiliate API Reference

The RegioJet\\'s Affiliate API is a set of endpoints that help your application integrate with RegioJet.  The API is organized arount [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API uses standard HTTP methods, authentication, and status codes.  # Authentication Authentication to the API is performed via [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication) for all endpoints listed in this documentation with the exception of `/users/authenticate`, which uses bearer token.  API requests without authentication will fail.  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS).  # Errors  RegioJet uses conventional HTTP status codes in responses to indicate the success or failure of an API request.  In general:   * `2xx` codes indicate success;   * `4xx` codes indicate an error that failed given the information provided in request.   * `5xx` codes indicate an error with RegioJet's servers.

API version: 1.1.0
Contact: developers@studentagency.cz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PassengersDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PassengersDataResponse{}

// PassengersDataResponse struct for PassengersDataResponse
type PassengersDataResponse struct {
	// Required fields for 1st passenger
	FirstPassengerData []PersonalDataType `json:"firstPassengerData"`
	// Required fields for all other passengers
	OtherPassengersData []PersonalDataType `json:"otherPassengersData"`
}

type _PassengersDataResponse PassengersDataResponse

// NewPassengersDataResponse instantiates a new PassengersDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPassengersDataResponse(firstPassengerData []PersonalDataType, otherPassengersData []PersonalDataType) *PassengersDataResponse {
	this := PassengersDataResponse{}
	this.FirstPassengerData = firstPassengerData
	this.OtherPassengersData = otherPassengersData
	return &this
}

// NewPassengersDataResponseWithDefaults instantiates a new PassengersDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPassengersDataResponseWithDefaults() *PassengersDataResponse {
	this := PassengersDataResponse{}
	return &this
}

// GetFirstPassengerData returns the FirstPassengerData field value
func (o *PassengersDataResponse) GetFirstPassengerData() []PersonalDataType {
	if o == nil {
		var ret []PersonalDataType
		return ret
	}

	return o.FirstPassengerData
}

// GetFirstPassengerDataOk returns a tuple with the FirstPassengerData field value
// and a boolean to check if the value has been set.
func (o *PassengersDataResponse) GetFirstPassengerDataOk() ([]PersonalDataType, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstPassengerData, true
}

// SetFirstPassengerData sets field value
func (o *PassengersDataResponse) SetFirstPassengerData(v []PersonalDataType) {
	o.FirstPassengerData = v
}

// GetOtherPassengersData returns the OtherPassengersData field value
func (o *PassengersDataResponse) GetOtherPassengersData() []PersonalDataType {
	if o == nil {
		var ret []PersonalDataType
		return ret
	}

	return o.OtherPassengersData
}

// GetOtherPassengersDataOk returns a tuple with the OtherPassengersData field value
// and a boolean to check if the value has been set.
func (o *PassengersDataResponse) GetOtherPassengersDataOk() ([]PersonalDataType, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtherPassengersData, true
}

// SetOtherPassengersData sets field value
func (o *PassengersDataResponse) SetOtherPassengersData(v []PersonalDataType) {
	o.OtherPassengersData = v
}

func (o PassengersDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PassengersDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firstPassengerData"] = o.FirstPassengerData
	toSerialize["otherPassengersData"] = o.OtherPassengersData
	return toSerialize, nil
}

func (o *PassengersDataResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firstPassengerData",
		"otherPassengersData",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPassengersDataResponse := _PassengersDataResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPassengersDataResponse)

	if err != nil {
		return err
	}

	*o = PassengersDataResponse(varPassengersDataResponse)

	return err
}

type NullablePassengersDataResponse struct {
	value *PassengersDataResponse
	isSet bool
}

func (v NullablePassengersDataResponse) Get() *PassengersDataResponse {
	return v.value
}

func (v *NullablePassengersDataResponse) Set(val *PassengersDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePassengersDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePassengersDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePassengersDataResponse(val *PassengersDataResponse) *NullablePassengersDataResponse {
	return &NullablePassengersDataResponse{value: val, isSet: true}
}

func (v NullablePassengersDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePassengersDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
