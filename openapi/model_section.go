/*
RegioJet's Affiliate API Reference

The RegioJet\\'s Affiliate API is a set of endpoints that help your application integrate with RegioJet.  The API is organized arount [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API uses standard HTTP methods, authentication, and status codes.  # Authentication Authentication to the API is performed via [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication) for all endpoints listed in this documentation with the exception of `/users/authenticate`, which uses bearer token.  API requests without authentication will fail.  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS).  # Errors  RegioJet uses conventional HTTP status codes in responses to indicate the success or failure of an API request.  In general:   * `2xx` codes indicate success;   * `4xx` codes indicate an error that failed given the information provided in request.   * `5xx` codes indicate an error with RegioJet's servers.

API version: 1.1.0
Contact: developers@studentagency.cz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Section type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Section{}

// Section struct for Section
type Section struct {
	Id                 int64  `json:"id"`
	VehicleStandardKey string `json:"vehicleStandardKey"`
	// `true` if it is a support connnection or `false` if this is a RegioJet connection.
	Support bool `json:"support"`
	// Codes of individuals support connections on a single route.
	SupportCode *string `json:"supportCode,omitempty"`
	VehicleType string  `json:"vehicleType"`
	// `true` if seat can be chosen during reservation or `false` if seat is chosen during boarding.
	FixedSeatReservation bool      `json:"fixedSeatReservation"`
	Line                 Line      `json:"line"`
	DepartureStationId   int64     `json:"departureStationId"`
	DepartureStationName *string   `json:"departureStationName,omitempty"`
	DepartureCityId      int64     `json:"departureCityId"`
	DepartureCityName    *string   `json:"departureCityName,omitempty"`
	DepartureTime        time.Time `json:"departureTime"`
	DeparturePlatform    *string   `json:"departurePlatform,omitempty"`
	ArrivalStationId     int64     `json:"arrivalStationId"`
	ArrivalStationName   *string   `json:"arrivalStationName,omitempty"`
	ArrivalCityId        int64     `json:"arrivalCityId"`
	ArrivalCityName      *string   `json:"arrivalCityName,omitempty"`
	ArrivalTime          time.Time `json:"arrivalTime"`
	ArrivalPlatform      *string   `json:"arrivalPlatform,omitempty"`
	// Company Id
	CarrierId      *int64 `json:"carrierId,omitempty"`
	FreeSeatsCount *int64 `json:"freeSeatsCount,omitempty"`
	// Extraordinary event on route / traffic limitation
	Notices []string `json:"notices,omitempty"`
	// Available services on this connection
	Services []string `json:"services,omitempty"`
	// Textual information about the delay on a given section
	Delay *string `json:"delay,omitempty"`
	// Textual information about the travel time on a given section
	TravelTime string `json:"travelTime"`
	// comes from API
	EstimatedArrivalTime time.Time `json:"estimatedArrivalTime,omitempty"`
}

type _Section Section

// NewSection instantiates a new Section object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSection(id int64, vehicleStandardKey string, support bool, vehicleType string, fixedSeatReservation bool, line Line, departureStationId int64, departureCityId int64, departureTime time.Time, arrivalStationId int64, arrivalCityId int64, arrivalTime time.Time, travelTime string) *Section {
	this := Section{}
	this.Id = id
	this.VehicleStandardKey = vehicleStandardKey
	this.Support = support
	this.VehicleType = vehicleType
	this.FixedSeatReservation = fixedSeatReservation
	this.Line = line
	this.DepartureStationId = departureStationId
	this.DepartureCityId = departureCityId
	this.DepartureTime = departureTime
	this.ArrivalStationId = arrivalStationId
	this.ArrivalCityId = arrivalCityId
	this.ArrivalTime = arrivalTime
	this.TravelTime = travelTime
	return &this
}

// NewSectionWithDefaults instantiates a new Section object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSectionWithDefaults() *Section {
	this := Section{}
	return &this
}

// GetId returns the Id field value
func (o *Section) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Section) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Section) SetId(v int64) {
	o.Id = v
}

// GetVehicleStandardKey returns the VehicleStandardKey field value
func (o *Section) GetVehicleStandardKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VehicleStandardKey
}

// GetVehicleStandardKeyOk returns a tuple with the VehicleStandardKey field value
// and a boolean to check if the value has been set.
func (o *Section) GetVehicleStandardKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VehicleStandardKey, true
}

// SetVehicleStandardKey sets field value
func (o *Section) SetVehicleStandardKey(v string) {
	o.VehicleStandardKey = v
}

// GetSupport returns the Support field value
func (o *Section) GetSupport() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Support
}

// GetSupportOk returns a tuple with the Support field value
// and a boolean to check if the value has been set.
func (o *Section) GetSupportOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Support, true
}

// SetSupport sets field value
func (o *Section) SetSupport(v bool) {
	o.Support = v
}

// GetSupportCode returns the SupportCode field value if set, zero value otherwise.
func (o *Section) GetSupportCode() string {
	if o == nil || IsNil(o.SupportCode) {
		var ret string
		return ret
	}
	return *o.SupportCode
}

// GetSupportCodeOk returns a tuple with the SupportCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetSupportCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SupportCode) {
		return nil, false
	}
	return o.SupportCode, true
}

// HasSupportCode returns a boolean if a field has been set.
func (o *Section) HasSupportCode() bool {
	if o != nil && !IsNil(o.SupportCode) {
		return true
	}

	return false
}

// SetSupportCode gets a reference to the given string and assigns it to the SupportCode field.
func (o *Section) SetSupportCode(v string) {
	o.SupportCode = &v
}

// GetVehicleType returns the VehicleType field value
func (o *Section) GetVehicleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VehicleType
}

// GetVehicleTypeOk returns a tuple with the VehicleType field value
// and a boolean to check if the value has been set.
func (o *Section) GetVehicleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VehicleType, true
}

// SetVehicleType sets field value
func (o *Section) SetVehicleType(v string) {
	o.VehicleType = v
}

// GetFixedSeatReservation returns the FixedSeatReservation field value
func (o *Section) GetFixedSeatReservation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FixedSeatReservation
}

// GetFixedSeatReservationOk returns a tuple with the FixedSeatReservation field value
// and a boolean to check if the value has been set.
func (o *Section) GetFixedSeatReservationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FixedSeatReservation, true
}

// SetFixedSeatReservation sets field value
func (o *Section) SetFixedSeatReservation(v bool) {
	o.FixedSeatReservation = v
}

// GetLine returns the Line field value
func (o *Section) GetLine() Line {
	if o == nil {
		var ret Line
		return ret
	}

	return o.Line
}

// GetLineOk returns a tuple with the Line field value
// and a boolean to check if the value has been set.
func (o *Section) GetLineOk() (*Line, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Line, true
}

// SetLine sets field value
func (o *Section) SetLine(v Line) {
	o.Line = v
}

// GetDepartureStationId returns the DepartureStationId field value
func (o *Section) GetDepartureStationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepartureStationId
}

// GetDepartureStationIdOk returns a tuple with the DepartureStationId field value
// and a boolean to check if the value has been set.
func (o *Section) GetDepartureStationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepartureStationId, true
}

// SetDepartureStationId sets field value
func (o *Section) SetDepartureStationId(v int64) {
	o.DepartureStationId = v
}

// GetDepartureStationName returns the DepartureStationName field value if set, zero value otherwise.
func (o *Section) GetDepartureStationName() string {
	if o == nil || IsNil(o.DepartureStationName) {
		var ret string
		return ret
	}
	return *o.DepartureStationName
}

// GetDepartureStationNameOk returns a tuple with the DepartureStationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetDepartureStationNameOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureStationName) {
		return nil, false
	}
	return o.DepartureStationName, true
}

// HasDepartureStationName returns a boolean if a field has been set.
func (o *Section) HasDepartureStationName() bool {
	if o != nil && !IsNil(o.DepartureStationName) {
		return true
	}

	return false
}

// SetDepartureStationName gets a reference to the given string and assigns it to the DepartureStationName field.
func (o *Section) SetDepartureStationName(v string) {
	o.DepartureStationName = &v
}

// GetDepartureCityId returns the DepartureCityId field value
func (o *Section) GetDepartureCityId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepartureCityId
}

// GetDepartureCityIdOk returns a tuple with the DepartureCityId field value
// and a boolean to check if the value has been set.
func (o *Section) GetDepartureCityIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepartureCityId, true
}

// SetDepartureCityId sets field value
func (o *Section) SetDepartureCityId(v int64) {
	o.DepartureCityId = v
}

// GetDepartureCityName returns the DepartureCityName field value if set, zero value otherwise.
func (o *Section) GetDepartureCityName() string {
	if o == nil || IsNil(o.DepartureCityName) {
		var ret string
		return ret
	}
	return *o.DepartureCityName
}

// GetDepartureCityNameOk returns a tuple with the DepartureCityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetDepartureCityNameOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureCityName) {
		return nil, false
	}
	return o.DepartureCityName, true
}

// HasDepartureCityName returns a boolean if a field has been set.
func (o *Section) HasDepartureCityName() bool {
	if o != nil && !IsNil(o.DepartureCityName) {
		return true
	}

	return false
}

// SetDepartureCityName gets a reference to the given string and assigns it to the DepartureCityName field.
func (o *Section) SetDepartureCityName(v string) {
	o.DepartureCityName = &v
}

// GetDepartureTime returns the DepartureTime field value
func (o *Section) GetDepartureTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DepartureTime
}

// GetDepartureTimeOk returns a tuple with the DepartureTime field value
// and a boolean to check if the value has been set.
func (o *Section) GetDepartureTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepartureTime, true
}

// SetDepartureTime sets field value
func (o *Section) SetDepartureTime(v time.Time) {
	o.DepartureTime = v
}

// GetDeparturePlatform returns the DeparturePlatform field value if set, zero value otherwise.
func (o *Section) GetDeparturePlatform() string {
	if o == nil || IsNil(o.DeparturePlatform) {
		var ret string
		return ret
	}
	return *o.DeparturePlatform
}

// GetDeparturePlatformOk returns a tuple with the DeparturePlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetDeparturePlatformOk() (*string, bool) {
	if o == nil || IsNil(o.DeparturePlatform) {
		return nil, false
	}
	return o.DeparturePlatform, true
}

// HasDeparturePlatform returns a boolean if a field has been set.
func (o *Section) HasDeparturePlatform() bool {
	if o != nil && !IsNil(o.DeparturePlatform) {
		return true
	}

	return false
}

// SetDeparturePlatform gets a reference to the given string and assigns it to the DeparturePlatform field.
func (o *Section) SetDeparturePlatform(v string) {
	o.DeparturePlatform = &v
}

// GetArrivalStationId returns the ArrivalStationId field value
func (o *Section) GetArrivalStationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ArrivalStationId
}

// GetArrivalStationIdOk returns a tuple with the ArrivalStationId field value
// and a boolean to check if the value has been set.
func (o *Section) GetArrivalStationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArrivalStationId, true
}

// SetArrivalStationId sets field value
func (o *Section) SetArrivalStationId(v int64) {
	o.ArrivalStationId = v
}

// GetArrivalStationName returns the ArrivalStationName field value if set, zero value otherwise.
func (o *Section) GetArrivalStationName() string {
	if o == nil || IsNil(o.ArrivalStationName) {
		var ret string
		return ret
	}
	return *o.ArrivalStationName
}

// GetArrivalStationNameOk returns a tuple with the ArrivalStationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetArrivalStationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalStationName) {
		return nil, false
	}
	return o.ArrivalStationName, true
}

// HasArrivalStationName returns a boolean if a field has been set.
func (o *Section) HasArrivalStationName() bool {
	if o != nil && !IsNil(o.ArrivalStationName) {
		return true
	}

	return false
}

// SetArrivalStationName gets a reference to the given string and assigns it to the ArrivalStationName field.
func (o *Section) SetArrivalStationName(v string) {
	o.ArrivalStationName = &v
}

// GetArrivalCityId returns the ArrivalCityId field value
func (o *Section) GetArrivalCityId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ArrivalCityId
}

// GetArrivalCityIdOk returns a tuple with the ArrivalCityId field value
// and a boolean to check if the value has been set.
func (o *Section) GetArrivalCityIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArrivalCityId, true
}

// SetArrivalCityId sets field value
func (o *Section) SetArrivalCityId(v int64) {
	o.ArrivalCityId = v
}

// GetArrivalCityName returns the ArrivalCityName field value if set, zero value otherwise.
func (o *Section) GetArrivalCityName() string {
	if o == nil || IsNil(o.ArrivalCityName) {
		var ret string
		return ret
	}
	return *o.ArrivalCityName
}

// GetArrivalCityNameOk returns a tuple with the ArrivalCityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetArrivalCityNameOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalCityName) {
		return nil, false
	}
	return o.ArrivalCityName, true
}

// HasArrivalCityName returns a boolean if a field has been set.
func (o *Section) HasArrivalCityName() bool {
	if o != nil && !IsNil(o.ArrivalCityName) {
		return true
	}

	return false
}

// SetArrivalCityName gets a reference to the given string and assigns it to the ArrivalCityName field.
func (o *Section) SetArrivalCityName(v string) {
	o.ArrivalCityName = &v
}

// GetArrivalTime returns the ArrivalTime field value
func (o *Section) GetArrivalTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ArrivalTime
}

// GetArrivalTimeOk returns a tuple with the ArrivalTime field value
// and a boolean to check if the value has been set.
func (o *Section) GetArrivalTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArrivalTime, true
}

// SetArrivalTime sets field value
func (o *Section) SetArrivalTime(v time.Time) {
	o.ArrivalTime = v
}

// GetArrivalPlatform returns the ArrivalPlatform field value if set, zero value otherwise.
func (o *Section) GetArrivalPlatform() string {
	if o == nil || IsNil(o.ArrivalPlatform) {
		var ret string
		return ret
	}
	return *o.ArrivalPlatform
}

// GetArrivalPlatformOk returns a tuple with the ArrivalPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetArrivalPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalPlatform) {
		return nil, false
	}
	return o.ArrivalPlatform, true
}

// HasArrivalPlatform returns a boolean if a field has been set.
func (o *Section) HasArrivalPlatform() bool {
	if o != nil && !IsNil(o.ArrivalPlatform) {
		return true
	}

	return false
}

// SetArrivalPlatform gets a reference to the given string and assigns it to the ArrivalPlatform field.
func (o *Section) SetArrivalPlatform(v string) {
	o.ArrivalPlatform = &v
}

// GetCarrierId returns the CarrierId field value if set, zero value otherwise.
func (o *Section) GetCarrierId() int64 {
	if o == nil || IsNil(o.CarrierId) {
		var ret int64
		return ret
	}
	return *o.CarrierId
}

// GetCarrierIdOk returns a tuple with the CarrierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetCarrierIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CarrierId) {
		return nil, false
	}
	return o.CarrierId, true
}

// HasCarrierId returns a boolean if a field has been set.
func (o *Section) HasCarrierId() bool {
	if o != nil && !IsNil(o.CarrierId) {
		return true
	}

	return false
}

// SetCarrierId gets a reference to the given int64 and assigns it to the CarrierId field.
func (o *Section) SetCarrierId(v int64) {
	o.CarrierId = &v
}

// GetFreeSeatsCount returns the FreeSeatsCount field value if set, zero value otherwise.
func (o *Section) GetFreeSeatsCount() int64 {
	if o == nil || IsNil(o.FreeSeatsCount) {
		var ret int64
		return ret
	}
	return *o.FreeSeatsCount
}

// GetFreeSeatsCountOk returns a tuple with the FreeSeatsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetFreeSeatsCountOk() (*int64, bool) {
	if o == nil || IsNil(o.FreeSeatsCount) {
		return nil, false
	}
	return o.FreeSeatsCount, true
}

// HasFreeSeatsCount returns a boolean if a field has been set.
func (o *Section) HasFreeSeatsCount() bool {
	if o != nil && !IsNil(o.FreeSeatsCount) {
		return true
	}

	return false
}

// SetFreeSeatsCount gets a reference to the given int64 and assigns it to the FreeSeatsCount field.
func (o *Section) SetFreeSeatsCount(v int64) {
	o.FreeSeatsCount = &v
}

// GetNotices returns the Notices field value if set, zero value otherwise.
func (o *Section) GetNotices() []string {
	if o == nil || IsNil(o.Notices) {
		var ret []string
		return ret
	}
	return o.Notices
}

// GetNoticesOk returns a tuple with the Notices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetNoticesOk() ([]string, bool) {
	if o == nil || IsNil(o.Notices) {
		return nil, false
	}
	return o.Notices, true
}

// HasNotices returns a boolean if a field has been set.
func (o *Section) HasNotices() bool {
	if o != nil && !IsNil(o.Notices) {
		return true
	}

	return false
}

// SetNotices gets a reference to the given []string and assigns it to the Notices field.
func (o *Section) SetNotices(v []string) {
	o.Notices = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *Section) GetServices() []string {
	if o == nil || IsNil(o.Services) {
		var ret []string
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetServicesOk() ([]string, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *Section) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []string and assigns it to the Services field.
func (o *Section) SetServices(v []string) {
	o.Services = v
}

// GetDelay returns the Delay field value if set, zero value otherwise.
func (o *Section) GetDelay() string {
	if o == nil || IsNil(o.Delay) {
		var ret string
		return ret
	}
	return *o.Delay
}

// GetDelayOk returns a tuple with the Delay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Section) GetDelayOk() (*string, bool) {
	if o == nil || IsNil(o.Delay) {
		return nil, false
	}
	return o.Delay, true
}

// HasDelay returns a boolean if a field has been set.
func (o *Section) HasDelay() bool {
	if o != nil && !IsNil(o.Delay) {
		return true
	}

	return false
}

// SetDelay gets a reference to the given string and assigns it to the Delay field.
func (o *Section) SetDelay(v string) {
	o.Delay = &v
}

// GetTravelTime returns the TravelTime field value
func (o *Section) GetTravelTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TravelTime
}

// GetTravelTimeOk returns a tuple with the TravelTime field value
// and a boolean to check if the value has been set.
func (o *Section) GetTravelTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TravelTime, true
}

// SetTravelTime sets field value
func (o *Section) SetTravelTime(v string) {
	o.TravelTime = v
}

func (o Section) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Section) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["vehicleStandardKey"] = o.VehicleStandardKey
	toSerialize["support"] = o.Support
	if !IsNil(o.SupportCode) {
		toSerialize["supportCode"] = o.SupportCode
	}
	toSerialize["vehicleType"] = o.VehicleType
	toSerialize["fixedSeatReservation"] = o.FixedSeatReservation
	toSerialize["line"] = o.Line
	toSerialize["departureStationId"] = o.DepartureStationId
	if !IsNil(o.DepartureStationName) {
		toSerialize["departureStationName"] = o.DepartureStationName
	}
	toSerialize["departureCityId"] = o.DepartureCityId
	if !IsNil(o.DepartureCityName) {
		toSerialize["departureCityName"] = o.DepartureCityName
	}
	toSerialize["departureTime"] = o.DepartureTime
	if !IsNil(o.DeparturePlatform) {
		toSerialize["departurePlatform"] = o.DeparturePlatform
	}
	toSerialize["arrivalStationId"] = o.ArrivalStationId
	if !IsNil(o.ArrivalStationName) {
		toSerialize["arrivalStationName"] = o.ArrivalStationName
	}
	toSerialize["arrivalCityId"] = o.ArrivalCityId
	if !IsNil(o.ArrivalCityName) {
		toSerialize["arrivalCityName"] = o.ArrivalCityName
	}
	toSerialize["arrivalTime"] = o.ArrivalTime
	if !IsNil(o.ArrivalPlatform) {
		toSerialize["arrivalPlatform"] = o.ArrivalPlatform
	}
	if !IsNil(o.CarrierId) {
		toSerialize["carrierId"] = o.CarrierId
	}
	if !IsNil(o.FreeSeatsCount) {
		toSerialize["freeSeatsCount"] = o.FreeSeatsCount
	}
	if !IsNil(o.Notices) {
		toSerialize["notices"] = o.Notices
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.Delay) {
		toSerialize["delay"] = o.Delay
	}
	toSerialize["travelTime"] = o.TravelTime
	return toSerialize, nil
}

func (o *Section) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"vehicleStandardKey",
		"support",
		"vehicleType",
		"fixedSeatReservation",
		"line",
		"departureStationId",
		"departureCityId",
		"departureTime",
		"arrivalStationId",
		"arrivalCityId",
		"arrivalTime",
		"travelTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSection := _Section{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSection)

	if err != nil {
		return err
	}

	*o = Section(varSection)

	return err
}

type NullableSection struct {
	value *Section
	isSet bool
}

func (v NullableSection) Get() *Section {
	return v.value
}

func (v *NullableSection) Set(val *Section) {
	v.value = val
	v.isSet = true
}

func (v NullableSection) IsSet() bool {
	return v.isSet
}

func (v *NullableSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSection(val *Section) *NullableSection {
	return &NullableSection{value: val, isSet: true}
}

func (v NullableSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
