/*
RegioJet's Affiliate API Reference

The RegioJet\\'s Affiliate API is a set of endpoints that help your application integrate with RegioJet.  The API is organized arount [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API uses standard HTTP methods, authentication, and status codes.  # Authentication Authentication to the API is performed via [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication) for all endpoints listed in this documentation with the exception of `/users/authenticate`, which uses bearer token.  API requests without authentication will fail.  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS).  # Errors  RegioJet uses conventional HTTP status codes in responses to indicate the success or failure of an API request.  In general:   * `2xx` codes indicate success;   * `4xx` codes indicate an error that failed given the information provided in request.   * `5xx` codes indicate an error with RegioJet's servers.

API version: 1.1.0
Contact: developers@studentagency.cz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TimePeriod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimePeriod{}

// TimePeriod struct for TimePeriod
type TimePeriod struct {
	// Number of days
	Days *int64 `json:"days,omitempty"`
	// Number of hours
	Hours *int64 `json:"hours,omitempty"`
	// Number of minutes
	Minutes *int64 `json:"minutes,omitempty"`
}

// NewTimePeriod instantiates a new TimePeriod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimePeriod() *TimePeriod {
	this := TimePeriod{}
	return &this
}

// NewTimePeriodWithDefaults instantiates a new TimePeriod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimePeriodWithDefaults() *TimePeriod {
	this := TimePeriod{}
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *TimePeriod) GetDays() int64 {
	if o == nil || IsNil(o.Days) {
		var ret int64
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *TimePeriod) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int64 and assigns it to the Days field.
func (o *TimePeriod) SetDays(v int64) {
	o.Days = &v
}

// GetHours returns the Hours field value if set, zero value otherwise.
func (o *TimePeriod) GetHours() int64 {
	if o == nil || IsNil(o.Hours) {
		var ret int64
		return ret
	}
	return *o.Hours
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetHoursOk() (*int64, bool) {
	if o == nil || IsNil(o.Hours) {
		return nil, false
	}
	return o.Hours, true
}

// HasHours returns a boolean if a field has been set.
func (o *TimePeriod) HasHours() bool {
	if o != nil && !IsNil(o.Hours) {
		return true
	}

	return false
}

// SetHours gets a reference to the given int64 and assigns it to the Hours field.
func (o *TimePeriod) SetHours(v int64) {
	o.Hours = &v
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *TimePeriod) GetMinutes() int64 {
	if o == nil || IsNil(o.Minutes) {
		var ret int64
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetMinutesOk() (*int64, bool) {
	if o == nil || IsNil(o.Minutes) {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *TimePeriod) HasMinutes() bool {
	if o != nil && !IsNil(o.Minutes) {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given int64 and assigns it to the Minutes field.
func (o *TimePeriod) SetMinutes(v int64) {
	o.Minutes = &v
}

func (o TimePeriod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimePeriod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.Hours) {
		toSerialize["hours"] = o.Hours
	}
	if !IsNil(o.Minutes) {
		toSerialize["minutes"] = o.Minutes
	}
	return toSerialize, nil
}

type NullableTimePeriod struct {
	value *TimePeriod
	isSet bool
}

func (v NullableTimePeriod) Get() *TimePeriod {
	return v.value
}

func (v *NullableTimePeriod) Set(val *TimePeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableTimePeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableTimePeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimePeriod(val *TimePeriod) *NullableTimePeriod {
	return &NullableTimePeriod{value: val, isSet: true}
}

func (v NullableTimePeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimePeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
