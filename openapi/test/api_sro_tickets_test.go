/*
RegioJet's Affiliate API Reference

Testing SroTicketsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/metju-ac/train-me-maybe/openapi"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_SroTicketsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SroTicketsAPIService CancelSroTicket", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.SroTicketsAPI.CancelSroTicket(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SroTicketsAPIService CancelSroTicketByTxToken", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var txToken string

		resp, httpRes, err := apiClient.SroTicketsAPI.CancelSroTicketByTxToken(context.Background(), txToken).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	// t.Run("Test SroTicketsAPIService CreateUnregisteredSroTickets", func(t *testing.T) {

	// 	t.Skip("skip test") // remove to run test

	// 	resp, httpRes, err := apiClient.SroTicketsAPI.CreateUnregisteredSroTickets(context.Background()).Execute()

	// 	require.Nil(t, err)
	// 	require.NotNil(t, resp)
	// 	assert.Equal(t, 200, httpRes.StatusCode)

	// })

	t.Run("Test SroTicketsAPIService GetBookedSroTickets", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var txToken string

		resp, httpRes, err := apiClient.SroTicketsAPI.GetBookedSroTickets(context.Background(), txToken).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SroTicketsAPIService GetSroTicketById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.SroTicketsAPI.GetSroTicketById(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
