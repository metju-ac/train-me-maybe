/*
RegioJet's Affiliate API Reference

Testing TicketsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/metju-ac/train-me-maybe/openapi"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_TicketsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TicketsAPIService CancelTicket", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.TicketsAPI.CancelTicket(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TicketsAPIService CreateTickets", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TicketsAPI.CreateTickets(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TicketsAPIService GetTicketById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.TicketsAPI.GetTicketById(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TicketsAPIService GetTicketQrCode", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.TicketsAPI.GetTicketQrCode(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TicketsAPIService GetTicketQrCodePng", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.TicketsAPI.GetTicketQrCodePng(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TicketsAPIService Print", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountCode string
		var ticketId int64

		resp, httpRes, err := apiClient.TicketsAPI.Print(context.Background(), accountCode, ticketId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
