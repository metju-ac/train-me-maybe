{
  "swagger": "2.0",
  "info": {
    "description": "The RegioJet\\'s Affiliate API is a set of endpoints that help your application integrate with RegioJet.\n\nThe API is organized arount [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API uses standard HTTP methods, authentication, and status codes.\n\n# Authentication\nAuthentication to the API is performed via [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication) for all endpoints listed in this documentation with the exception of `/users/authenticate`, which uses bearer token.\n\nAPI requests without authentication will fail.\n\nAll API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS).\n\n# Errors\n\nRegioJet uses conventional HTTP status codes in responses to indicate the success or failure of an API request.\n\nIn general:\n  * `2xx` codes indicate success;\n  * `4xx` codes indicate an error that failed given the information provided in request.\n  * `5xx` codes indicate an error with RegioJet's servers.\n",
    "version": "1.1.0",
    "title": "RegioJet's Affiliate API Reference",
    "contact": {
      "email": "developers@studentagency.cz"
    }
  },
  "host": "brn-qa-ybus-privapi.sa.cz",
  "basePath": "/affiliate",
  "tags": [
    {
      "name": "Consts",
      "description": "Data that cannot be affected by other endpoints. Contains translations and detailed data about locations, tariffs, etc.\n\n_Note the difference between seat classes, tariffs, and vehicle standards._\n"
    },
    {
      "name": "Payments",
      "description": "Payment operations."
    },
    {
      "name": "Routes",
      "description": "Routes search"
    },
    {
      "name": "Tickets",
      "description": "Tickets related operations."
    },
    {
      "name": "Users",
      "description": "Users related operations."
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "BasicAuth": []
    }
  ],
  "paths": {
    "/consts/actionPrices": {
      "get": {
        "tags": [
          "Consts"
        ],
        "summary": "Returns list of action prices.",
        "operationId": "getActionPrices",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "activeOnly",
            "in": "query",
            "description": "A flag that indicates whether response should contain only active action prices.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "A list of action prices.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionPrice"
              }
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/consts/locations": {
      "get": {
        "tags": [
          "Consts"
        ],
        "summary": "List all locations served by RegioJet.",
        "description": "Returns detailed information about all locations served by RegioJet.",
        "operationId": "getLocations",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "stationType",
            "in": "query",
            "description": "Only returns locations of the given type. One of `BUS_STATION`, or `TRAIN_STATION`.",
            "required": false,
            "type": "string",
            "enum": [
              "BUS_STATION",
              "TRAIN_STATION"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of served locations grouped in a tree structure by countries and cities.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Country"
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/consts/seatClasses": {
      "get": {
        "tags": [
          "Consts"
        ],
        "summary": "List all seat classes provided by RegioJet.",
        "description": "Returns detailed information about all possible seat classes provided by RegioJet.",
        "operationId": "getSeatClasses",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of seat classes.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SeatClass"
              }
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/consts/tariffs": {
      "get": {
        "tags": [
          "Consts"
        ],
        "summary": "Get all possible tariffs.",
        "description": "Returns detailed data about each tariff.",
        "operationId": "getTariffs",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of possible tariffs.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tariff"
              }
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/consts/vehicleStandards": {
      "get": {
        "tags": [
          "Consts"
        ],
        "summary": "Get all existing vehicle standards.",
        "description": "Returns detailed data about each vehicle standard.",
        "operationId": "getStandards",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of vehicle standards.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VehicleStandard"
              }
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/consts/translations/{language}": {
      "get": {
        "tags": [
          "Consts"
        ],
        "summary": "Get translations for the selected language.",
        "description": "Returns a dictionary of all translation keys with corresponding translation strings in selected language.",
        "operationId": "getLanguageDictionary",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "language",
            "in": "path",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). Very similar to X-Lang header of other endpoints, but its value is taken from the path instead of a header.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": true,
            "type": "string",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Translations dictionary.",
            "schema": {
              "$ref": "#/definitions/LanguageDictionary"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/payments/{ticketId}/pay": {
      "put": {
        "tags": [
          "Payments"
        ],
        "description": "Pays a ticket.",
        "operationId": "payTicket",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket was paid successfully."
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400_1"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/payments/RJ_SRO/{bookingToken}/pay": {
      "put": {
        "tags": [
          "Payments"
        ],
        "description": "Marks a tickets as paid for given booking token.",
        "operationId": "paySroBooking",
        "parameters": [
          {
            "name": "bookingToken",
            "in": "path",
            "description": "Internal ID of the soft booking operation that will be paid.",
            "required": true,
            "type": "string",
            "maxLength": 10,
            "minLength": 8
          },
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-TxToken",
            "in": "header",
            "description": "Internal ID of the operation - used for check status 204.",
            "required": true,
            "type": "string",
            "maxLength": 10,
            "minLength": 8
          }
        ],
        "responses": {
          "201": {
            "description": "One or more new resources have been successfully created.",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/routes/{connection}/{fromLocation}/{toLocation}/{ticketType}": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Search for available routes.",
        "description": "Search available routes with free seat reservations.",
        "operationId": "searchSR70Routes",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Date and time of departure, mandatory for this request.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "seatClass",
            "in": "query",
            "description": "Seat class.",
            "required": false,
            "type": "integer",
            "default": 2,
            "enum": [
              1,
              2
            ]
          },
          {
            "name": "numberOfPassengers",
            "in": "query",
            "description": "Number of passengers.",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "connection",
            "in": "path",
            "description": "CIS connection identifier.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromLocation",
            "in": "path",
            "description": "Departure station numeric identifier in the SR70 format.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toLocation",
            "in": "path",
            "description": "Arrival station numeric identifier in the SR70 format.",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ticketType",
            "in": "path",
            "description": "Ticket type.",
            "required": true,
            "type": "string",
            "enum": [
              "RJ_SEAT",
              "RJ_TIME",
              "RJ_SRO"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of all available routes.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SroRoute"
              }
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/routes/search": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Get collection of all routes that satisfy specified search criteria for the route.",
        "description": "Authorization not required (filtres info bubbles)",
        "operationId": "searchRoutes",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "fromLocationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromLocationType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "CITY",
              "STATION"
            ]
          },
          {
            "name": "toLocationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toLocationType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "CITY",
              "STATION"
            ]
          },
          {
            "name": "departureTime",
            "in": "query",
            "description": "Departure date-time",
            "required": false,
            "type": "string",
            "default": "now()",
            "format": "date-time"
          },
          {
            "name": "tariffs",
            "in": "query",
            "description": "Ticket tariff",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "REGULAR"
          },
          {
            "name": "actionPrice",
            "in": "query",
            "description": "Code indication of a current marketing action. Filtres searched routes on current marketing action. List of all marketing action for current route included in endpoint /consts/actionPrices.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Route search successfully finished",
            "schema": {
              "$ref": "#/definitions/SearchResult"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          }
        }
      }
    },
    "/routes/search/simple": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Search for routes that satisfy specified search criteria.",
        "description": "Get collection of all routes that satisfy specified search criteria for the route.",
        "operationId": "simpleSearchRoutes",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "X-Used-DepartureFromDateTime",
            "in": "header",
            "description": "Should contain `date-time` value from previous route search. Its value is returned in response header of the same name. Used to move forward or backward in search results (i.e. for pagination).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "X-Used-DepartureToDateTime",
            "in": "header",
            "description": "Should contain `date-time` value from previous route search. Its value is returned in response header of the same name. Used to move forward or backward in search results (i.e. for pagination).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "fromLocationId",
            "in": "query",
            "description": "Unique identifier for `from` location. This identifier can be obtained from `/consts/locations` endpoint. Unique identifier of either city, or station, can be used.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromLocationType",
            "in": "query",
            "description": "Location type of unique identifier used in query parameter `fromLocationId`.",
            "required": true,
            "type": "string",
            "enum": [
              "CITY",
              "STATION"
            ]
          },
          {
            "name": "toLocationId",
            "in": "query",
            "description": "Unique identifier for `to` location. This identifier can be obtained from `/consts/locations` endpoint. Unique identifier of either city, or station, can be used.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toLocationType",
            "in": "query",
            "description": "Location type of unique identifier used in query parameter `toLocationId`.",
            "required": true,
            "type": "string",
            "enum": [
              "CITY",
              "STATION"
            ]
          },
          {
            "name": "departureDate",
            "in": "query",
            "description": "Departure date.",
            "required": false,
            "type": "string",
            "default": "now()",
            "format": "date"
          },
          {
            "name": "tariffs",
            "in": "query",
            "description": "List of tariffs. Tariff keys can be obtained from `/consts/tariffs`. Multiple parameter instances should be used rather than multiple values when submitting multiple values. For example: `&tariffs=REGULAR&tariffs=ISIC`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "REGULAR"
          },
          {
            "name": "actionPrice",
            "in": "query",
            "description": "Code indentifier of a marketing action. Filters search result based on applicability of provided marketing action to a route. List of all marketing actions for current route can be obtained from endpoint `/consts/actionPrices`.",
            "required": false,
            "type": "string"
          },
          {
            "name": "move",
            "in": "query",
            "description": "Move forward or backward in search results. Defines if next call to this endpoint will return next or previous result page.",
            "required": false,
            "type": "string",
            "enum": [
              "BACKWARD",
              "FORWARD"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of found routes.",
            "headers": {
              "X-Used-DepartureFromDateTime": {
                "type": "string",
                "format": "date-time",
                "description": "Departure `from` `date-time` value that was used in current search. This value should be used in header of the same name in the next call to this endpoint. It allows to move forward or backward in search results (i.e. pagination)."
              },
              "X-Used-DepartureToDateTime": {
                "type": "string",
                "format": "date-time",
                "description": "Departure `to` `date-time` value that was used in current search. This value should be used in header of the same name in the next call to this endpoint. It allows to move forward or backward in search results (i.e. pagination)."
              }
            },
            "schema": {
              "$ref": "#/definitions/SimpleRouteSearchResult"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400_2"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/routes/{routeId}/simple": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Get details of the given route.",
        "description": "Returns detailed data for the given route.",
        "operationId": "getSimpleRouteDetail",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "routeId",
            "in": "path",
            "description": "Unique identifier for the route. It consists of route section identifiers separed by commas (e.g. `section0.id,section1.id,section2.id`).",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromStationId",
            "in": "query",
            "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toStationId",
            "in": "query",
            "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tariffs",
            "in": "query",
            "description": "List of tariffs. Tariff keys can be obtained from `/consts/tariffs`. Multiple parameter instances should be used rather than multiple values when submitting multiple values. For example: `&tariffs=REGULAR&tariffs=ISIC`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "REGULAR"
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed data about chosen route.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400_3"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/routes/{routeId}/prices/RJ_SRO": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Get route detail.",
        "description": "Get available prices for the given route and type.",
        "operationId": "getSroRoutePrices",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "routeId",
            "in": "path",
            "description": "Unique identifier for the route. It consists of route section identifiers separed by commas (e.g. `section0.id,section1.id,section2.id`).",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromStationId",
            "in": "query",
            "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 17797001
          },
          {
            "name": "toStationId",
            "in": "query",
            "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 10204002
          },
          {
            "name": "departureDate",
            "in": "query",
            "description": "Date and time of departure. Date is required. Time is optional.",
            "required": false,
            "type": "string",
            "default": "now()",
            "format": "date-time"
          },
          {
            "name": "seatClass",
            "in": "query",
            "description": "Seat class.",
            "required": false,
            "type": "integer",
            "default": 2,
            "enum": [
              1,
              2
            ]
          },
          {
            "name": "numberOfPassengers",
            "in": "query",
            "description": "Number of passengers.",
            "required": false,
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully loaded route detail.",
            "schema": {
              "$ref": "#/definitions/SroRouteDetail"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/routes/{routeId}/passengersData": {
      "post": {
        "tags": [
          "Routes"
        ],
        "summary": "Get mandatory passengers data.",
        "description": "Retuns separately data of the first passenger and data of other passengers for the given route.",
        "operationId": "getPassengersData",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "routeId",
            "in": "path",
            "description": "Unique identifier for the route. It consists of route section identifiers separed by commas (e.g. `section0.id,section1.id,section2.id`).",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PassengersDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Seats reservation status successfully loaded",
            "schema": {
              "$ref": "#/definitions/PassengersDataResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400_4"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/routes/{routeId}/passengersData/RJ_SRO": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Get mandatory passengers data.",
        "description": "Get mandatory passenger data for the given route and available seat reservations.",
        "operationId": "getSroPassengersData",
        "consumes": [
          "application/1.1.0+json"
        ],
        "produces": [
          "application/1.1.0+json"
        ],
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "routeId",
            "in": "path",
            "description": "Unique identifier for the route. It consists of route section identifiers separed by commas (e.g. `section0.id,section1.id,section2.id`).",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromStationId",
            "in": "query",
            "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 17797001
          },
          {
            "name": "toStationId",
            "in": "query",
            "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 10204002
          },
          {
            "name": "departureDate",
            "in": "query",
            "description": "Date and time of departure. Date is required. Time is optional.",
            "required": false,
            "type": "string",
            "default": "now()",
            "format": "date-time"
          },
          {
            "name": "seatClass",
            "in": "query",
            "description": "Seat class.",
            "required": false,
            "type": "integer",
            "default": 2,
            "enum": [
              1,
              2
            ]
          },
          {
            "name": "numberOfPassengers",
            "in": "query",
            "description": "Number of passengers.",
            "required": false,
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Seats reservation status successfully loaded",
            "schema": {
              "$ref": "#/definitions/SroPassengersDataResponse"
            }
          }
        }
      }
    },
    "/routes/{routeId}/freeSeats": {
      "post": {
        "tags": [
          "Routes"
        ],
        "summary": "Get list of free seats.",
        "description": "Returns detailed data about all free seats available for reservation. Free seats are grouped by vehicle.",
        "operationId": "getRouteFreeSeats_1_1_0",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "routeId",
            "in": "path",
            "description": "Unique identifier for the route. It consists of route section identifiers separed by commas (e.g. `section0.id,section1.id,section2.id`).",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Route section details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteSeatsRequest"
            }
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Detailed data about available seats.",
            "schema": {
              "$ref": "#/definitions/RouteSeatsResponse_1_1_0"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400_3"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/routes/freeSeats": {
      "post": {
        "tags": [
          "Routes"
        ],
        "summary": "Get route tandem free seats grouped by vehicles.",
        "operationId": "getRouteFreeSeats",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Occupied",
            "in": "header",
            "description": "Return occupied seats. To turn off have to be deactivated at administrative app and X-occupied have to be false. Default value is false.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "Descriptions of the Route detail",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteSeatsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Route seats info successfully loaded",
            "schema": {
              "$ref": "#/definitions/RouteSeatsResponse"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/tickets/create": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Create new ticket(s).",
        "operationId": "createTickets",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "in": "body",
            "name": "ticketsRequest",
            "description": "Ticket(s) to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUnregisteredTicketRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created ticket(s).",
            "schema": {
              "$ref": "#/definitions/CreateTicketResponseUnregistered"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/inline_response_400_5"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "/tickets/RJ_SRO/unregistered": {
      "post": {
        "tags": [
          "SroTickets"
        ],
        "summary": "Create seat reservation.",
        "description": "Creates seat reservation for unregistered user.",
        "operationId": "createUnregisteredSroTickets",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-Currency",
            "in": "header",
            "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
            "required": false,
            "type": "string",
            "default": "EUR",
            "enum": [
              "CZK",
              "EUR"
            ]
          },
          {
            "name": "X-TxToken",
            "in": "header",
            "description": "Internal ID of the operation - used for check status 204.",
            "required": true,
            "type": "string",
            "maxLength": 10,
            "minLength": 8
          },
          {
            "in": "body",
            "name": "request",
            "description": "Object with seat reservations that need to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSroTicketsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully booked seat reservation.",
            "schema": {
              "$ref": "#/responses/201"
            }
          },
          "204": {
            "description": "Request was already sent.",
            "schema": {
              "$ref": "#/responses/204"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/responses/400"
            }
          },
          "401": {
            "description": "Unauthorized (invalid token or credentials).",
            "schema": {
              "$ref": "#/responses/401"
            }
          }
        }
      }
    },
    "/tickets/{accountCode}/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get ticket by ID.",
        "description": "Returns detailed ticket data.",
        "operationId": "getTicketById",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket data.",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/RJ_SRO/{txToken}": {
      "get": {
        "tags": [
          "SroTickets"
        ],
        "summary": "Get seat reservation by softbooking operation ID.",
        "operationId": "getBookedSroTickets",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "txToken",
            "in": "path",
            "description": "Internal ID of the soft booking operation that will be canceled.",
            "required": true,
            "type": "string",
            "maxLength": 10,
            "minLength": 8
          }
        ],
        "responses": {
          "200": {
            "description": "Seat reservation only Ticket detail successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SroTicketBookingResponse"
              }
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SroTickets"
        ],
        "summary": "Cancel seat reservation only ticket by txToken.",
        "operationId": "cancelSroTicketByTxToken",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-TxToken",
            "in": "header",
            "description": "Internal ID of the operation - used for check status 204.",
            "required": true,
            "type": "string",
            "maxLength": 10,
            "minLength": 8
          },
          {
            "name": "txToken",
            "in": "path",
            "description": "Internal ID of the original booking operation that will be canceled.",
            "required": true,
            "type": "string",
            "maxLength": 10,
            "minLength": 8
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelTicketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/RJ_SRO/{accountCode}/{ticketId}": {
      "get": {
        "tags": [
          "SroTickets"
        ],
        "summary": "Get seat reservation by ID.",
        "operationId": "getSroTicketById",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Seat reservation only Ticket detail successfully retrieved",
            "schema": {
              "$ref": "#/definitions/SroTicket"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/{accountCode}/{ticketId}/cancel": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Cancel ticket by ID.",
        "operationId": "cancelTicket",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelTicketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/{accountCode}/RJ_SRO/{ticketId}": {
      "delete": {
        "tags": [
          "SroTickets"
        ],
        "summary": "Cancel seat reservation only ticket by ID.",
        "operationId": "cancelSroTicket",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "X-TxToken",
            "in": "header",
            "description": "Token (hash) identifier of transaction.",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelTicketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/{accountCode}/{ticketId}/print": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Prints ticket.",
        "description": "Outputs ticket in HTML format.",
        "operationId": "print",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "HTML that contains ticket's details.",
            "schema": {
              "type": "string",
              "example": "<html></html>"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/{accountCode}/{ticketId}/qrcode": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get tickets' QR code.",
        "description": "Get QR code content in CSV format (European CSV/DSV). Fields are separated by the semicolon character.",
        "operationId": "getTicketQrCode",
        "produces": [
          "text/csv"
        ],
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "QR code in CSV format.",
            "examples": {
              "text/csv": "2;RJ_SEAT;123456789"
            },
            "schema": {
              "$ref": "#/definitions/QrCodeTicket"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/tickets/{accountCode}/{ticketId}/qrcode/png": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get QR code image for ticket.",
        "description": "Get QR code as a PNG image.",
        "operationId": "getTicketQrCodePng",
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          },
          {
            "name": "accountCode",
            "in": "path",
            "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Unique identifier for the ticket.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "QR code as PNG image.",
            "schema": {
              "type": "string",
              "format": "binary",
              "example": "Binary string of QR code image."
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "403": {
            "description": "Permissions denied",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          }
        }
      }
    },
    "/users/authenticate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Authenticate user.",
        "description": "Validation of user's token. Users token is returned in response from `/tickets/create` endpoint. It is necessary to call this endpoint to obtain `accountCode` for user's account, which is used in every tickets related endpoint with exception of `/tickets/create`.",
        "operationId": "authenticate",
        "parameters": [
          {
            "name": "X-Application-Origin",
            "in": "header",
            "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
            "required": false,
            "type": "string",
            "default": "AFF",
            "enum": [
              "APP",
              "AFF",
              "CAT",
              "OCT",
              "DEV",
              "DOT",
              "NOT",
              "WEB"
            ]
          },
          {
            "name": "X-Lang",
            "in": "header",
            "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
            "required": false,
            "type": "string",
            "default": "en",
            "enum": [
              "cs",
              "de",
              "en",
              "es",
              "fr",
              "hu",
              "ru",
              "sk",
              "uk",
              "zh"
            ]
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "No valid credentials or token provided.",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "description": "Authorization for affiliate partner.",
      "type": "basic"
    },
    "Bearer": {
      "description": "Authorization for customer.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "OK"
        },
        "messageFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageField"
          }
        }
      }
    },
    "BadRequestResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid Language",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageField"
          }
        }
      }
    },
    "UnauthorizedResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Authentication failed",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "ForbiddenResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Access denied. Please log in first.",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "description": "Unauthorized."
    },
    "ActionPrice": {
      "type": "object",
      "required": [
        "code",
        "id",
        "name",
        "showIcon",
        "url"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3541310004,
          "description": "Unique identifier of action."
        },
        "code": {
          "type": "string",
          "example": "akcni_koupani",
          "description": "Action price code."
        },
        "name": {
          "type": "string",
          "example": "Akční koupání v Chorvatsku",
          "description": "Action price name."
        },
        "url": {
          "type": "string",
          "example": "https://www.regiojet.cz/akcni-nabidky/chorvatsko-na-otocku.html",
          "description": "Publicly available URL of an action."
        },
        "description": {
          "type": "string",
          "description": "Action price description."
        },
        "showIcon": {
          "type": "boolean",
          "example": true,
          "description": "Flag that indicates wheter icon should be shown with action price name."
        }
      }
    },
    "BannerBubble": {
      "type": "object",
      "required": [
        "id",
        "imageUrl",
        "text"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 20394859403
        },
        "text": {
          "type": "string",
          "example": "There's security members walking through train during travel",
          "description": "Extra information for bubble."
        },
        "url": {
          "type": "string",
          "example": "https://www.regiojet.com/services/services-on-board-of-trains/",
          "description": "Redirection to more information."
        },
        "imageUrl": {
          "type": "string",
          "description": "Bubble picture URL address."
        }
      },
      "description": "Bubble picture with possibility of redirection to more informations"
    },
    "CancelCharge": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Ticket cancel.",
          "description": "Cancel charge description."
        },
        "amount": {
          "type": "number",
          "example": 110,
          "description": "Amount of money in chosen currency taken from ticket/addon/... which will not be refunded."
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "percent": {
          "type": "integer",
          "example": 10,
          "description": "Number of percents of original price that will be withheld for cancel."
        }
      },
      "description": "Amount of money charged for reservation cancel."
    },
    "CancelTicketRequest": {
      "type": "object",
      "required": [
        "controlHash"
      ],
      "properties": {
        "controlHash": {
          "type": "string",
          "example": "AB42CAB42CAB42CAB42CAB42CAB42C5F",
          "description": "Hash (MD5) of cancellation terms, agreed on by the customer"
        },
        "refundToOriginalSource": {
          "type": "boolean",
          "example": false,
          "description": "TRUE if refund money after ticket cancel should return to original source, otherwise FALSE"
        }
      }
    },
    "City": {
      "type": "object",
      "required": [
        "id",
        "name",
        "stations"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 10202002,
          "description": "Unique identifier for the city."
        },
        "name": {
          "type": "string",
          "example": "Brno",
          "description": "City name."
        },
        "aliases": {
          "type": "array",
          "example": [
            "Brünn",
            "布尔诺",
            "Брно"
          ],
          "description": "City nicknames or aliases.",
          "items": {
            "type": "string"
          }
        },
        "stationsTypes": {
          "type": "array",
          "description": "Types of stations available in a city.",
          "items": {
            "type": "string",
            "example": "",
            "enum": [
              "BUS_STATION",
              "TRAIN_STATION"
            ]
          }
        },
        "stations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Station"
          }
        }
      }
    },
    "CodeDiscount": {
      "type": "object",
      "required": [
        "code",
        "discount",
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 304959504432,
          "description": "Flat rate discount ID"
        },
        "code": {
          "type": "string",
          "example": "E4l.d",
          "description": "Five-digit discount code"
        },
        "discount": {
          "type": "number",
          "example": 100,
          "description": "Flat rate discount sum in ticket currency"
        }
      },
      "description": "Flat rate discount"
    },
    "Company": {
      "type": "object",
      "required": [
        "address",
        "companyName",
        "registrationNumber"
      ],
      "properties": {
        "companyName": {
          "type": "string",
          "example": "RegioJet"
        },
        "address": {
          "type": "string",
          "example": "Náměstí Svobody 17, 602 00 Brno"
        },
        "registrationNumber": {
          "type": "string",
          "example": "25317075"
        },
        "vatNumber": {
          "type": "string",
          "example": "CZ25317075"
        }
      }
    },
    "Country": {
      "type": "object",
      "required": [
        "cities",
        "code",
        "country"
      ],
      "properties": {
        "country": {
          "type": "string",
          "example": "Czech Republic",
          "description": "Country name."
        },
        "code": {
          "type": "string",
          "example": "CZ",
          "description": "A two-letter country code from [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/City"
          }
        }
      }
    },
    "CreateTicketRequest": {
      "type": "object",
      "required": [
        "passengers",
        "route"
      ],
      "properties": {
        "route": {
          "$ref": "#/definitions/CreateTicketRouteRequest"
        },
        "selectedAddons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedAddon"
          }
        },
        "passengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Passenger"
          }
        },
        "codeDiscount": {
          "type": "string",
          "example": "di4.d",
          "description": "Flat rate discount from fare price (does not apply on addons and charges). Applies first (before percentual discount)"
        },
        "percentualDiscountIds": {
          "type": "array",
          "description": "Percentual discount from fare price (does not apply on addons and charges). Applies as seconds (after flat rate discount)",
          "items": {
            "type": "integer",
            "format": "int64",
            "example": 30495730405
          }
        }
      },
      "description": "TODO: passenger by měl mít příznak isInsuarence + data..."
    },
    "CreateTicketResponseUnregistered": {
      "type": "object",
      "required": [
        "tickets",
        "token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "example": "5348c0b3-e02b-4308-bf56-c8fc991a982e",
          "description": "Newly created user account token which is linked to ticket(s)"
        },
        "tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ticket"
          }
        }
      }
    },
    "CreateTicketRouteRequest": {
      "type": "object",
      "required": [
        "priceSource",
        "routeId",
        "seatClass",
        "sections"
      ],
      "properties": {
        "routeId": {
          "type": "string",
          "example": "3804436614,3862631913",
          "description": "route id (section0.id,section1.id, ... sectionx.id)"
        },
        "seatClass": {
          "type": "string",
          "example": "C1"
        },
        "priceSource": {
          "type": "string",
          "example": "3870611089<3088864001-3741302011-3863407000>",
          "description": "Pricing ID - used for confirmation that price, services or conditions werent changed"
        },
        "actionPrice": {
          "$ref": "#/definitions/ActionPrice"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateTicketSectionRequest"
          }
        }
      }
    },
    "CreateTicketSectionRequest": {
      "type": "object",
      "required": [
        "section"
      ],
      "properties": {
        "section": {
          "$ref": "#/definitions/SimpleSection"
        },
        "selectedSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedSeat_1_0_0"
          }
        }
      }
    },
    "CreateUnregisteredTicketRequest": {
      "type": "object",
      "required": [
        "agreeWithTerms",
        "ticketRequests"
      ],
      "properties": {
        "agreeWithTerms": {
          "type": "boolean",
          "description": "Agree with terms",
          "default": false
        },
        "ticketRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateTicketRequest"
          }
        },
        "affiliateCode": {
          "type": "string",
          "example": "affcode123456",
          "description": "Optional code of an affiliate partner."
        }
      }
    },
    "Currency": {
      "type": "string",
      "example": "CZK",
      "enum": [
        "EUR",
        "CZK"
      ],
      "default": "EUR"
    },
    "CustomerActions": {
      "type": "object",
      "required": [
        "additionalServices",
        "cancel",
        "editPassengers",
        "evaluate",
        "pay",
        "payRemaining",
        "printInvoice",
        "printTicket",
        "rebook",
        "sentToMail",
        "showDetail",
        "storno"
      ],
      "properties": {
        "showDetail": {
          "type": "boolean",
          "default": false
        },
        "pay": {
          "type": "boolean",
          "default": false
        },
        "payRemaining": {
          "type": "boolean",
          "default": false
        },
        "evaluate": {
          "type": "boolean",
          "default": false
        },
        "cancel": {
          "type": "boolean",
          "default": false
        },
        "storno": {
          "type": "boolean",
          "default": false
        },
        "rebook": {
          "type": "boolean",
          "default": false
        },
        "editPassengers": {
          "type": "boolean",
          "default": false
        },
        "additionalServices": {
          "type": "boolean",
          "default": false
        },
        "sentToMail": {
          "type": "boolean",
          "default": false
        },
        "printTicket": {
          "type": "boolean",
          "default": false
        },
        "printInvoice": {
          "type": "boolean",
          "default": false
        }
      },
      "description": "Defines which actions can be executed with current ticket state"
    },
    "LanguageDictionary": {
      "type": "object",
      "example": {
        "createRating.send": "Odeslat hodnocení",
        "DateRangeValidator": "Nezadáno žádné datum",
        "carriers": "Dopravci",
        "ticket.typeOnlyForward": "jednosměrná"
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "Line": {
      "type": "object",
      "required": [
        "connectionId",
        "from",
        "to"
      ],
      "properties": {
        "connectionId": {
          "type": "integer",
          "format": "int64",
          "example": 5211582015,
          "description": "Unique section identifier."
        },
        "code": {
          "type": "string",
          "example": "RJ 1042",
          "description": "Line's connection code."
        },
        "from": {
          "type": "string",
          "example": "Brno",
          "description": "Line's departure city."
        },
        "to": {
          "type": "string",
          "example": "Prague",
          "description": "Line's arrival city."
        },
        "lineGroupCode": {
          "type": "string",
          "example": "VLAK",
          "description": "Line group code."
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "example": 270,
          "description": "Line number."
        }
      },
      "description": "Detailed data about line connection."
    },
    "MessageField": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "X-Lang",
          "description": "Error/invalid field title"
        },
        "value": {
          "type": "string",
          "example": "The language you entered is not allowed, these are available [cs, sk, en, de, at, hu, es, fr, ru, uk, zh, pl]",
          "description": "Error/validation message to current field"
        }
      }
    },
    "Notifications": {
      "type": "object",
      "required": [
        "newsletter",
        "reservationChange",
        "routeRatingSurvey"
      ],
      "properties": {
        "newsletter": {
          "type": "boolean",
          "default": false
        },
        "reservationChange": {
          "type": "boolean",
          "default": false
        },
        "routeRatingSurvey": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "OrderedAddon": {
      "type": "object",
      "required": [
        "conditions",
        "currency",
        "description",
        "iconUrl",
        "id",
        "name",
        "price"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "example": "Ski transportation"
        },
        "description": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "infoUrl": {
          "type": "string"
        },
        "infoUrlLabel": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "example": 150
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "conditions": {
          "$ref": "#/definitions/PriceConditions"
        }
      }
    },
    "Passenger": {
      "type": "object",
      "required": [
        "tariff"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3895574004
        },
        "firstName": {
          "type": "string",
          "example": "First",
          "description": "First name"
        },
        "surname": {
          "type": "string",
          "example": "Passenger",
          "description": "Surname"
        },
        "phone": {
          "type": "string",
          "example": 420777666777
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "first.passenger@email.com",
          "description": "Email are always required after first passenger if not pre-filled in user account (or customer isnt logged in)"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "example": "1988-07-21"
        },
        "tariff": {
          "type": "string",
          "example": "REGULAR"
        },
        "amount": {
          "type": "number",
          "example": 100,
          "description": "Basic price (ticket purchase) for tariff set on ticket with ticket currency (doesnt count with discounts)"
        },
        "moneyBack": {
          "type": "number",
          "example": 90,
          "description": "Final amount for passenger which will be refunded if canceled."
        }
      }
    },
    "PassengersDataRequest": {
      "type": "object",
      "required": [
        "priceSource",
        "seatClass",
        "sections",
        "tariffs"
      ],
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleSection"
          }
        },
        "tariffs": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "REGULAR"
          }
        },
        "seatClass": {
          "type": "string",
          "example": "C1"
        },
        "priceSource": {
          "type": "string",
          "example": "3870611089<3088864001-3741302011-3863407000>",
          "description": "Pricing ID - used for confirmation that price, services or conditions werent changed"
        }
      }
    },
    "PassengersDataResponse": {
      "type": "object",
      "required": [
        "firstPassengerData",
        "otherPassengersData"
      ],
      "properties": {
        "firstPassengerData": {
          "type": "array",
          "description": "Required fields for 1st passenger",
          "items": {
            "$ref": "#/definitions/PersonalDataType"
          }
        },
        "otherPassengersData": {
          "type": "array",
          "description": "Required fields for all other passengers",
          "items": {
            "$ref": "#/definitions/PersonalDataType"
          }
        }
      }
    },
    "PassengersInfo": {
      "type": "object",
      "required": [
        "changeCharge",
        "firstPassengerData",
        "otherPassengersData",
        "passengers"
      ],
      "properties": {
        "passengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Passenger"
          }
        },
        "firstPassengerData": {
          "type": "array",
          "description": "Required fields for 1st passenger (returns only if tickets is editable)",
          "items": {
            "$ref": "#/definitions/PersonalDataType"
          }
        },
        "otherPassengersData": {
          "type": "array",
          "description": "Required fields for all others passengers (returns only if tickets is editable)",
          "items": {
            "$ref": "#/definitions/PersonalDataType"
          }
        },
        "changeCharge": {
          "type": "number",
          "example": 200,
          "description": "Administrative charge for user information change (in ticket currency)"
        }
      },
      "description": "Summary of all informations needed for work with passengers."
    },
    "PercentualDiscount": {
      "type": "object",
      "required": [
        "amount",
        "id",
        "passengers",
        "percentage"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 42
        },
        "percentage": {
          "type": "integer",
          "example": 10,
          "description": "Size of a percentual discount"
        },
        "amount": {
          "type": "number",
          "example": 1250,
          "description": "Discount sum in account currency"
        },
        "passengers": {
          "type": "integer",
          "example": 3,
          "description": "Maximal number of passengers"
        },
        "fromLocation": {
          "type": "string",
          "example": "Prague",
          "description": "Default departure country/city/station translations"
        },
        "toLocation": {
          "type": "string",
          "example": "Brno",
          "description": "Default arrival country/city/station translations"
        },
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Percentual discount"
    },
    "PersonalDataType": {
      "type": "string",
      "enum": [
        "FIRST_NAME",
        "SURNAME",
        "BIRTHDAY",
        "EMAIL",
        "PHONE",
        "ZIP_CODE",
        "PERSONAL_NUMBER",
        "STREET",
        "HOUSE_NUMBER",
        "CITY"
      ]
    },
    "PriceClass": {
      "type": "object",
      "required": [
        "bookable",
        "conditions",
        "creditPrice",
        "customerNotifications",
        "freeSeatsCount",
        "price",
        "priceSource",
        "seatClassKey",
        "services",
        "tariffs"
      ],
      "properties": {
        "seatClassKey": {
          "type": "string",
          "example": "C0",
          "description": "Seat class key."
        },
        "conditions": {
          "$ref": "#/definitions/PriceConditions"
        },
        "services": {
          "type": "array",
          "description": "Service icons for wifi, steward, etc.",
          "items": {
            "type": "string",
            "example": ""
          }
        },
        "freeSeatsCount": {
          "type": "integer",
          "example": 181
        },
        "price": {
          "type": "number",
          "example": 175
        },
        "creditPrice": {
          "type": "number",
          "example": 170
        },
        "priceSource": {
          "type": "string",
          "example": "5351666225<3088864001-372825000-5345830069>",
          "description": "Pricing ID - used for price, services or terms confirmation after route search."
        },
        "customerNotifications": {
          "type": "array",
          "example": [
            "Connection is operated by partner carrier company MT-Lines"
          ],
          "description": "Customer notifications",
          "items": {
            "type": "string"
          }
        },
        "actionPrice": {
          "$ref": "#/definitions/ActionPrice"
        },
        "tariffs": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "REGULAR"
          }
        },
        "tariffNotifications": {
          "$ref": "#/definitions/TariffNotifications"
        },
        "bookable": {
          "type": "boolean",
          "example": true,
          "description": "`true` if there are free seats in class available for reservation, otherwise `false`."
        }
      }
    },
    "PriceConditions": {
      "type": "object",
      "required": [
        "code",
        "descriptions"
      ],
      "properties": {
        "code": {
          "type": "string",
          "example": "AB42CAB42CAB42CAB42CAB42CAB42C5F",
          "description": "Control MD5 hash transformed from conditions content (used for current terms visibility check)."
        },
        "descriptions": {
          "$ref": "#/definitions/PriceConditionsDescriptions"
        },
        "refundToOriginalSourcePossible": {
          "type": "boolean",
          "example": false,
          "description": "States that if its possible to refund money to original money source"
        },
        "cancelCharge": {
          "type": "number",
          "example": 399,
          "description": "Sum of all cancel charges in chosen currency."
        },
        "cancelCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CancelCharge"
          }
        }
      },
      "description": "Reservation cancel conditions."
    },
    "PriceConditionsDescriptions": {
      "type": "object",
      "properties": {
        "cancel": {
          "type": "string",
          "example": "more than 15 minutes before departure: 0 %, less than 15 minutes: not possible",
          "description": "Cancel charge"
        },
        "rebook": {
          "type": "string",
          "example": "more than 15 minutes before departure: by cancellation for 0 CZK, less than 15 minutes: not possible",
          "description": "Rebook"
        },
        "expiration": {
          "type": "string",
          "example": "27 minutes (6/15/20, 1:14 PM GMT+2)",
          "description": "Payment expiration"
        }
      },
      "description": "Text description of cancel conditions."
    },
    "QrCodeTicket": {
      "type": "object",
      "properties": {
        "qrCodeVersion": {
          "type": "integer",
          "example": 2,
          "description": "Version of QR code"
        },
        "qrCodeTicketType": {
          "$ref": "#/definitions/QrCodeTicketType"
        },
        "ticketId": {
          "type": "integer",
          "format": "int64",
          "description": "If there is used discount there is as well ticket ID which is linked to it."
        }
      }
    },
    "QrCodeTicketType": {
      "type": "string",
      "description": "Ticket type of QR code",
      "example": "RJ_SEAT",
      "enum": [
        "RJ_SEAT",
        "RJ_TIME"
      ]
    },
    "RouteShort": {
      "type": "object",
      "required": [
        "arrivalCityId",
        "arrivalStationId",
        "arrivalTime",
        "bookable",
        "departureCityId",
        "departureStationId",
        "departureTime",
        "freeSeatsCount",
        "id",
        "mainSectionId",
        "sections"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5340698223",
          "description": "Unique identifier of a route. Consists of unique sections identifiers separated by commas."
        },
        "mainSectionId": {
          "type": "integer",
          "format": "int64",
          "example": 5340698223,
          "description": "Main section of the route. Only for this section can customer select seat class or vehicle standard."
        },
        "departureStationId": {
          "type": "integer",
          "format": "int64",
          "example": 3088864001
        },
        "departureStationName": {
          "type": "string",
          "example": "hl. nádraží"
        },
        "departureCityId": {
          "type": "integer",
          "format": "int64",
          "example": 10202002
        },
        "departureCityName": {
          "type": "string",
          "example": "Brno"
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-06-20T06:09:00.000+02:00"
        },
        "arrivalStationId": {
          "type": "integer",
          "format": "int64",
          "example": 372825000
        },
        "arrivalStationName": {
          "type": "string",
          "example": "hl.n."
        },
        "arrivalCityId": {
          "type": "integer",
          "format": "int64",
          "example": 10202003
        },
        "arrivalCityName": {
          "type": "string",
          "example": "Praha"
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-06-20T08:42:00.000+02:00"
        },
        "freeSeatsCount": {
          "type": "integer",
          "example": 274,
          "description": "Number of available free seats through all sections."
        },
        "priceFrom": {
          "type": "number",
          "example": 175
        },
        "priceTo": {
          "type": "number",
          "example": 349
        },
        "creditPriceFrom": {
          "type": "number",
          "example": 170
        },
        "creditPriceTo": {
          "type": "number",
          "example": 344
        },
        "vehicleTypes": {
          "type": "array",
          "example": [
            "TRAIN"
          ],
          "items": {
            "$ref": "#/definitions/VehicleType"
          }
        },
        "surcharge": {
          "$ref": "#/definitions/Surcharge"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          }
        },
        "notices": {
          "type": "boolean",
          "example": true,
          "description": "Notice of any extraordinarily events on route / traffic limitation"
        },
        "transfersInfo": {
          "$ref": "#/definitions/TransfersInfo"
        },
        "nationalTrip": {
          "type": "boolean",
          "example": true,
          "description": "TRUE => national, FALSE => international"
        },
        "bookable": {
          "type": "boolean",
          "example": true,
          "description": "TRUE if at least one class have enough free seats for reservation, otherwise FALSE"
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Textual information about the first delay on the route"
        },
        "travelTime": {
          "type": "string",
          "example": "03:30 h",
          "description": "Textual information about the travel time on the route"
        }
      }
    },
    "Route": {
      "type": "object",
      "required": [
        "arrivalCityId",
        "arrivalStationId",
        "arrivalTime",
        "bookable",
        "departureCityId",
        "departureStationId",
        "departureTime",
        "freeSeatsCount",
        "id",
        "mainSectionId",
        "sections"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5340698223",
          "description": "Unique identifier of a route. Consists of unique sections identifiers separated by commas."
        },
        "mainSectionId": {
          "type": "integer",
          "format": "int64",
          "example": 5340698223,
          "description": "Main section of the route. Only for this section can customer select seat class or vehicle standard."
        },
        "departureStationId": {
          "type": "integer",
          "format": "int64",
          "example": 3088864001
        },
        "departureStationName": {
          "type": "string",
          "example": "hl. nádraží"
        },
        "departureCityId": {
          "type": "integer",
          "format": "int64",
          "example": 10202002
        },
        "departureCityName": {
          "type": "string",
          "example": "Brno"
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-06-20T06:09:00.000+02:00"
        },
        "arrivalStationId": {
          "type": "integer",
          "format": "int64",
          "example": 372825000
        },
        "arrivalStationName": {
          "type": "string",
          "example": "hl.n."
        },
        "arrivalCityId": {
          "type": "integer",
          "format": "int64",
          "example": 10202003
        },
        "arrivalCityName": {
          "type": "string",
          "example": "Praha"
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-06-20T08:42:00.000+02:00"
        },
        "freeSeatsCount": {
          "type": "integer",
          "example": 274,
          "description": "Number of available free seats through all sections."
        },
        "priceFrom": {
          "type": "number",
          "example": 175
        },
        "priceTo": {
          "type": "number",
          "example": 349
        },
        "creditPriceFrom": {
          "type": "number",
          "example": 170
        },
        "creditPriceTo": {
          "type": "number",
          "example": 344
        },
        "vehicleTypes": {
          "type": "array",
          "example": [
            "TRAIN"
          ],
          "items": {
            "$ref": "#/definitions/VehicleType"
          }
        },
        "priceClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceClass"
          }
        },
        "surcharge": {
          "$ref": "#/definitions/Surcharge"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          }
        },
        "notices": {
          "type": "boolean",
          "example": true,
          "description": "Notice of any extraordinarily events on route / traffic limitation"
        },
        "transfersInfo": {
          "$ref": "#/definitions/TransfersInfo"
        },
        "nationalTrip": {
          "type": "boolean",
          "example": true,
          "description": "TRUE => national, FALSE => international"
        },
        "bookable": {
          "type": "boolean",
          "example": true,
          "description": "TRUE if at least one class have enough free seats for reservation, otherwise FALSE"
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Textual information about the first delay on the route"
        },
        "travelTime": {
          "type": "string",
          "example": "03:30 h",
          "description": "Textual information about the travel time on the route"
        }
      }
    },
    "RouteSeatsRequest": {
      "type": "object",
      "required": [
        "seatClass",
        "sections",
        "tariffs"
      ],
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleSection"
          }
        },
        "tariffs": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "REGULAR"
          }
        },
        "seatClass": {
          "type": "string",
          "example": "C1"
        }
      }
    },
    "RouteSeatsResponse_1_1_0": {
      "type": "object",
      "required": [
        "fixedSeatReservation",
        "sectionId"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3804436614
        },
        "fixedSeatReservation": {
          "type": "boolean",
          "description": "TRUE => seat reservation; FALSE => seat choosed while boarding"
        },
        "vehicles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle_1_1_0"
          }
        },
        "selectedSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedSeat_1_0_0"
          }
        }
      }
    },
    "RouteSeatsResponse": {
      "type": "object",
      "required": [
        "fixedSeatReservation",
        "sectionId"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3804436614
        },
        "fixedSeatReservation": {
          "type": "boolean",
          "description": "TRUE => seat reservation; FALSE => seat choosed while boarding"
        },
        "vehicles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle"
          }
        },
        "selectedSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedSeat"
          }
        }
      }
    },
    "Seat": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "example": 15,
          "description": "Number of seat in vehicle"
        },
        "seatClass": {
          "type": "string",
          "example": "RELAX"
        },
        "seatConstraint": {
          "type": "string",
          "example": "Only women are allowed to this coupe",
          "description": "Notification which needs to be confirmed by customer before continue in reservation"
        },
        "seatNotes": {
          "type": "array",
          "example": [
            "You've choosed seat in LOW COST class - without service. Seats are equipped with elbow armrest and are unmovable, thats why they're suitable for short distance traveling. Bottled water Rajec, newspapers and magazines are available. Enjoy undisturbed travel with option of watching more than 50 movies, listening music and playing games in your own device."
          ],
          "description": "Supplementary informations which are shown but isnt required to be confirmed",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SeatClass": {
      "type": "object",
      "required": [
        "description",
        "key",
        "title"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "C0",
          "description": "Seat class key. Used in responses of other endpoints."
        },
        "vehicleClass": {
          "type": "string",
          "example": "undefined",
          "description": "Vehicle class.",
          "enum": [
            "1",
            "2",
            "undefined"
          ]
        },
        "title": {
          "type": "string",
          "example": "Standard (2nd cl.)",
          "description": "Seat class title."
        },
        "description": {
          "type": "string",
          "example": "Coupe for groups of 2-6 persons, disinfection for passengers. Free Illy coffee, free Rajec water. Possibility to order additional refreshments from the on-board menu at the best prices.",
          "description": "Full seat class description."
        },
        "imageUrl": {
          "type": "string",
          "example": "https://brn-ybus-privapi.sa.cz/resources/seat_class/standard.jpg",
          "description": "URL of a seat class thumbnail image."
        },
        "galleryUrl": {
          "type": "string",
          "example": "https://www.regiojet.com/services/services-on-board-of-trains/standard.html",
          "description": "URL of a publicly accessible complete information about a seat class."
        }
      }
    },
    "Section": {
      "type": "object",
      "required": [
        "arrivalCityId",
        "arrivalStationId",
        "arrivalTime",
        "departureCityId",
        "departureStationId",
        "departureTime",
        "fixedSeatReservation",
        "id",
        "line",
        "support",
        "travelTime",
        "vehicleStandardKey",
        "vehicleType"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 5340698223
        },
        "vehicleStandardKey": {
          "type": "string",
          "example": "YELLOW"
        },
        "support": {
          "type": "boolean",
          "example": false,
          "description": "`true` if it is a support connnection or `false` if this is a RegioJet connection."
        },
        "supportCode": {
          "type": "string",
          "example": "P1, P2",
          "description": "Codes of individuals support connections on a single route."
        },
        "vehicleType": {
          "type": "string",
          "example": "TRAIN"
        },
        "fixedSeatReservation": {
          "type": "boolean",
          "example": true,
          "description": "`true` if seat can be chosen during reservation or `false` if seat is chosen during boarding."
        },
        "line": {
          "$ref": "#/definitions/Line"
        },
        "departureStationId": {
          "type": "integer",
          "format": "int64"
        },
        "departureStationName": {
          "type": "string"
        },
        "departureCityId": {
          "type": "integer",
          "format": "int64"
        },
        "departureCityName": {
          "type": "string"
        },
        "departureTime": {
          "type": "string",
          "format": "date-time"
        },
        "departurePlatform": {
          "type": "string",
          "example": ""
        },
        "arrivalStationId": {
          "type": "integer",
          "format": "int64"
        },
        "arrivalStationName": {
          "type": "string"
        },
        "arrivalCityId": {
          "type": "integer",
          "format": "int64"
        },
        "arrivalCityName": {
          "type": "string"
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time"
        },
        "arrivalPlatform": {
          "type": "string",
          "example": "* `BUS` - 3\n* `BUS` - S2\n* `BUS` - Streat title (used exceptionally, for example at lockout or detour)\n* `VLAK` - 2/1\n* `VLAK` - -/1\n* `VLAK` - 1/-\n* `VLAK` - -/-\n"
        },
        "carrierId": {
          "type": "integer",
          "format": "int64",
          "description": "Company Id"
        },
        "freeSeatsCount": {
          "type": "integer"
        },
        "notices": {
          "type": "array",
          "description": "Extraordinary event on route / traffic limitation",
          "items": {
            "type": "string",
            "example": "There are fatal accident on line, delay will be 120 minutes"
          }
        },
        "services": {
          "type": "array",
          "description": "Available services on this connection",
          "items": {
            "type": "string",
            "example": "wifi"
          }
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Textual information about the delay on a given section"
        },
        "travelTime": {
          "type": "string",
          "example": "01:10 h",
          "description": "Textual information about the travel time on a given section"
        }
      }
    },
    "SelectedAddon": {
      "type": "object",
      "required": [
        "addonId",
        "conditionsHash",
        "count",
        "currency",
        "price"
      ],
      "properties": {
        "addonId": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "example": 3
        },
        "price": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "conditionsHash": {
          "type": "string",
          "example": "AB42CAB42CAB42CAB42CAB42CAB42C5F",
          "description": "Hash (MD5) of cancellation terms, agreed on by the customer"
        }
      }
    },
    "SelectedSeat_1_0_0": {
      "type": "object",
      "required": [
        "seatIndex",
        "sectionId",
        "vehicleNumber"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3789624138
        },
        "vehicleNumber": {
          "type": "integer",
          "example": 7
        },
        "seatIndex": {
          "type": "integer",
          "example": 15
        }
      }
    },
    "SelectedSeat": {
      "type": "object",
      "required": [
        "seatIndex",
        "sectionId",
        "vehicleDeckNumber",
        "vehicleNumber"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3789624138
        },
        "vehicleNumber": {
          "type": "integer",
          "example": 7
        },
        "vehicleDeckNumber": {
          "type": "integer",
          "example": 2
        },
        "seatIndex": {
          "type": "integer",
          "example": 15
        }
      }
    },
    "SimpleRoute": {
      "type": "object",
      "required": [
        "actionPrice",
        "arrivalTime",
        "bookable",
        "creditPriceFrom",
        "departureTime",
        "freeSeatsCount",
        "id",
        "notices",
        "priceFrom",
        "pricesCount",
        "support",
        "surcharge",
        "vehicleTypes"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5340698223",
          "description": "Unique identifier of a route. Consists of unique sections identifiers separated by commas."
        },
        "departureStationId": {
          "type": "integer",
          "format": "int64",
          "example": 3088864001,
          "description": "Unique identifier of departure station."
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-06-20T06:09:00.000+02:00",
          "description": "Departure time."
        },
        "arrivalStationId": {
          "type": "integer",
          "format": "int64",
          "example": 372825000,
          "description": "Unique identifier of arrival station."
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-06-20T08:42:00.000+02:00",
          "description": "Arrival time."
        },
        "vehicleTypes": {
          "type": "array",
          "example": [
            "TRAIN"
          ],
          "description": "Vehicle type.",
          "items": {
            "$ref": "#/definitions/VehicleType"
          }
        },
        "transfersCount": {
          "type": "integer",
          "example": 0,
          "description": "Number of transfers between stations."
        },
        "freeSeatsCount": {
          "type": "integer",
          "example": 274,
          "description": "Number of available free seats through all sections."
        },
        "priceFrom": {
          "type": "number",
          "example": 175,
          "description": "Minimum ticket price for open account."
        },
        "priceTo": {
          "type": "number",
          "example": 349,
          "description": "Maximum ticket price for open account."
        },
        "creditPriceFrom": {
          "type": "number",
          "example": 170,
          "description": "Minimum ticket price for RegioJet Pay."
        },
        "creditPriceTo": {
          "type": "number",
          "example": 344,
          "description": "Maximum ticket price for RegioJet Pay."
        },
        "pricesCount": {
          "type": "integer",
          "example": 3,
          "description": "Number of available prices."
        },
        "actionPrice": {
          "type": "boolean",
          "example": false,
          "description": "`true` if any price is action price, otherwise `false`."
        },
        "surcharge": {
          "type": "boolean",
          "example": false,
          "description": "`true` if there is surcharge on this route, otherwise `false`."
        },
        "notices": {
          "type": "boolean",
          "example": true,
          "description": "Notice of any extraordinary events on route or traffic problems."
        },
        "support": {
          "type": "boolean",
          "example": false,
          "description": "`true` if this route (or its part) have support (e.g. in form of additional railroad cars), otherwise `false`."
        },
        "nationalTrip": {
          "type": "boolean",
          "example": false,
          "description": "`true` if route is interstate, `false` if route is international."
        },
        "bookable": {
          "type": "boolean",
          "example": true,
          "description": "`true` if at least one class have enough free seats for reservation, otherwise `false`."
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Textual information about the first delay on the route."
        },
        "travelTime": {
          "type": "string",
          "example": "02:33 h",
          "description": "Textual information about route's travel time."
        },
        "vehicleStandardKey": {
          "type": "string",
          "example": "YELLOW",
          "description": "Vehicle standard key. Detailed data about every available vehicle standard can be obtained from `/consts/vehicleStandards`."
        }
      }
    },
    "SearchResult": {
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteShort"
          }
        },
        "routesMessage": {
          "type": "string",
          "example": "Connection between these destinations dont exist. Edit your search parameters and try again",
          "description": "Message describing exceptionally behavior or route search states"
        },
        "bannerBubbles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BannerBubble"
          }
        },
        "textBubbles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextBubble"
          }
        }
      }
    },
    "SimpleRouteSearchResult": {
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleRoute"
          }
        },
        "routesMessage": {
          "type": "string",
          "example": "In accordance with state of emergency declared by the Czech Government and by the governments of other EU countries, all international routes are canceled. Routes between these destinations in the selected dates are not available. Thank you for your understanding.",
          "description": "Message describing exceptional state of route search."
        },
        "bannerBubbles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BannerBubble"
          }
        },
        "textBubbles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextBubble"
          }
        }
      }
    },
    "SimpleSection": {
      "type": "object",
      "required": [
        "fromStationId",
        "sectionId",
        "toStationId"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3804436614
        },
        "fromStationId": {
          "type": "integer",
          "format": "int64",
          "example": 17797001,
          "description": "Valid station ID (city ID unsupported at this level)"
        },
        "toStationId": {
          "type": "integer",
          "format": "int64",
          "example": 10204002,
          "description": "Valid station ID (city ID unsupported at this level)"
        }
      }
    },
    "Station": {
      "type": "object",
      "required": [
        "fullname",
        "id",
        "name",
        "significance"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3088864001,
          "description": "Unique identifier for the station."
        },
        "name": {
          "type": "string",
          "example": "hl. nádraží",
          "description": "Station name."
        },
        "fullname": {
          "type": "string",
          "example": "Brno - hl. nádraží",
          "description": "Station full name."
        },
        "aliases": {
          "type": "array",
          "example": [
            "Brno hlavní nádraží",
            "Brno nádraží"
          ],
          "description": "Station nicknames or aliases.",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string",
          "example": "Železniční stanice Hlavní nádraží, Nádražní 418/7, 602 00 Brno-střed",
          "description": "Station address."
        },
        "stationsTypes": {
          "type": "array",
          "example": [
            "TRAIN_STATION"
          ],
          "description": "Station type.",
          "items": {
            "type": "string",
            "enum": [
              "BUS_STATION",
              "TRAIN_STATION"
            ]
          }
        },
        "iataCode": {
          "type": "string",
          "example": "BRQ",
          "description": "A three-letter from [IATA airport code](https://en.wikipedia.org/wiki/IATA_airport_code)."
        },
        "stationUrl": {
          "type": "string",
          "example": "https://www.regiojet.com/timetables-and-stops/stops/3088864001.html",
          "description": "Publicly accessible station URL."
        },
        "stationTimeZoneCode": {
          "type": "string",
          "example": "Europe/Prague",
          "description": "[TZ database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) time zone name in which station is located."
        },
        "wheelChairPlatform": {
          "type": "string",
          "example": "",
          "description": "\"Name of wheelchair platform provider (if available).\"\n\nPossible providers:\n\n  | Provider name | Provider code |\n  |---------------|---------------|\n  | České dráhy   | CD            |\n  | RegioJet      | RJ            |\n",
          "enum": [
            "RJ",
            "CD"
          ]
        },
        "significance": {
          "type": "integer",
          "example": 2,
          "description": "Station's significance within the city. (e.g. for the city of Brno, Brno main railway station is more significant than Brno - Královo Pole railway station.)"
        },
        "longitude": {
          "type": "number",
          "example": 16.6142520904541,
          "description": "The geographic longitude where station is located."
        },
        "latitude": {
          "type": "number",
          "example": "49.19335556030269884786321199499070644378662109375\"",
          "description": "The geographic latitude where station is located."
        },
        "imageUrl": {
          "type": "string",
          "example": "https://brn-ybus-privapi.sa.cz/resources/station/zast_Brno_HlNadr.png",
          "description": "URL to station's picture (if available)."
        }
      }
    },
    "Surcharge": {
      "type": "object",
      "required": [
        "notification",
        "price"
      ],
      "properties": {
        "price": {
          "type": "number",
          "example": 300,
          "description": "Surcharge amount (is not included in basic route price or even in `priceClass`)."
        },
        "notification": {
          "type": "string",
          "example": "Every reservation on this route will be in addition charged with non refundable surcharge of 300 CZK.",
          "description": "Notification which needs to be confirmed by customer."
        }
      },
      "description": "Mandatory non refundable surcharge."
    },
    "Tariff": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "REGULAR",
          "description": "Tariff's key that is used in responses from other endpoints."
        },
        "value": {
          "type": "string",
          "example": "Adult 18-64 years",
          "description": "Tariff description."
        }
      }
    },
    "TariffNotifications": {
      "type": "object",
      "required": [
        "content",
        "description",
        "title"
      ],
      "properties": {
        "title": {
          "type": "string",
          "example": "Following tariffs do not have discounts",
          "description": "Notification header translation"
        },
        "description": {
          "type": "string",
          "example": "These tariffs were changed to tariffs corresponding with reserved route. Price remained unchanged",
          "description": "Notification description translation"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "DISABLED --> REGULAR",
            "description": "Detail of tariff change"
          }
        }
      }
    },
    "TextBubble": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 40005893098
        },
        "text": {
          "type": "string",
          "example": "There's security members walking through train during travel"
        }
      }
    },
    "Ticket": {
      "type": "object",
      "required": [
        "conditions",
        "currency",
        "customerActions",
        "id",
        "passengersInfo",
        "price",
        "routeId",
        "routeSections",
        "seatClassKey",
        "state",
        "unpaid"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3895569002,
          "description": "ID of the ticket"
        },
        "routeId": {
          "type": "string",
          "example": "3804436614,3862631913",
          "description": "route id (section0.id,section1.id, ... sectionx.id)"
        },
        "price": {
          "type": "number",
          "example": 540,
          "description": "Final price for ticket, addons etc."
        },
        "unpaid": {
          "type": "number",
          "example": 0,
          "description": "Final price to be paid"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "state": {
          "$ref": "#/definitions/TicketState"
        },
        "seatClassKey": {
          "type": "string",
          "example": "C1"
        },
        "conditions": {
          "$ref": "#/definitions/PriceConditions"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2018-02-17T00:50:00.000+02:00"
        },
        "expirateAt": {
          "$ref": "#/definitions/TimePeriod"
        },
        "customerNotifications": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Line is servised by partner carrier bus MT-Lines"
          }
        },
        "customerActions": {
          "$ref": "#/definitions/CustomerActions"
        },
        "routeSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketSection"
          }
        },
        "addons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderedAddon"
          }
        },
        "paymentId": {
          "type": "integer",
          "format": "int64",
          "example": 3951798008,
          "description": "Payment ID (groupTransactionID). Available only with paid ticket. Necessary for further action with ticket (for example: print invoice)"
        },
        "bills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketBill"
          }
        },
        "usedCodeDiscount": {
          "$ref": "#/definitions/CodeDiscount"
        },
        "usedPercentualDiscounts": {
          "type": "array",
          "description": "Applied procentual discounts",
          "items": {
            "$ref": "#/definitions/PercentualDiscount"
          }
        },
        "transfersInfo": {
          "$ref": "#/definitions/TransfersInfo"
        },
        "surcharge": {
          "type": "number",
          "example": 100,
          "description": "Total count of all irreversible surcharges in current currency"
        },
        "cancelChargeSum": {
          "type": "number",
          "example": 499,
          "description": "Total count of all charges and surcharge"
        },
        "cancelMoneyBackSum": {
          "type": "number",
          "example": 41,
          "description": "Total count of reversible amounts"
        },
        "passengersInfo": {
          "$ref": "#/definitions/PassengersInfo"
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Textual information about the first delay on the route"
        },
        "travelTime": {
          "type": "string",
          "example": "01:10 h",
          "description": "Textual information about the travel time on a given section"
        },
        "estimatedArrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2018-02-17T00:50:00.000+02:00",
          "description": "Estimated arrival date time (arrival + delay)"
        }
      },
      "description": "expirationDate is date-time value states when ticket expires. ExpiresAt states how many days, hours and minutes left to ticket expiration."
    },
    "TicketBill": {
      "type": "object",
      "required": [
        "amount",
        "currency",
        "label"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "TicketSection": {
      "type": "object",
      "required": [
        "fixedSeatReservation",
        "section",
        "selectedSeats"
      ],
      "properties": {
        "section": {
          "$ref": "#/definitions/Section"
        },
        "fixedSeatReservation": {
          "type": "boolean",
          "description": "TRUE => seat reservation; FALSE => seat choosed while boarding"
        },
        "selectedSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedSeat_1_0_0"
          }
        },
        "vehicles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle_1_1_0"
          }
        }
      }
    },
    "TicketState": {
      "type": "string",
      "description": "* `USED` - driven ticket\n* `VALID` - Valid and paid ticket\n* `UNPAID` - Unpaid reservation\n* `CANCELED` - Canceled by user (soft-booking)\n* `DELETED` - Canceled by user (hard-booking)\n* `EXPIRED` - Expirated soft-booking which cant be bought anymore\n* `TO_BE_EXPIRED` - Expirated soft-booking which werent be able to finish by system\n",
      "enum": [
        "USED",
        "VALID",
        "UNPAID",
        "CANCELED",
        "DELETED",
        "EXPIRED",
        "TO_BE_EXPIRED"
      ]
    },
    "TimePeriod": {
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "example": 10,
          "description": "Number of days"
        },
        "hours": {
          "type": "integer",
          "example": 23,
          "description": "Number of hours"
        },
        "minutes": {
          "type": "integer",
          "example": 54,
          "description": "Number of minutes"
        }
      }
    },
    "Transfer": {
      "type": "object",
      "required": [
        "calculatedTransferTime",
        "fromStationId",
        "toStationId",
        "type"
      ],
      "properties": {
        "fromStationId": {
          "type": "integer",
          "format": "int64",
          "example": 10204003,
          "description": "Station ID from which customer needs to transfer"
        },
        "toStationId": {
          "type": "integer",
          "format": "int64",
          "example": 372825000,
          "description": "Station ID to which customer needs to transfer"
        },
        "type": {
          "$ref": "#/definitions/TransferType"
        },
        "calculatedTransferTime": {
          "$ref": "#/definitions/TimePeriod"
        },
        "determinedTransferTime": {
          "$ref": "#/definitions/TimePeriod"
        },
        "description": {
          "type": "string",
          "example": "Bus station can be found right opossite train station. Station is marked with sign Autobusová stanica. Go after yellow RegioJet buses which leaves from platform number 21.",
          "description": "Transfer specification"
        }
      },
      "description": "Informations about individual transfers (transfer order coincides with individual section order => 1st transfer is between 1st and 2nd section...). calculatedTransferTime is calculated tranfer time in minutes (departure time - arrival time), determinedTransferTime is used time in minutes needed for transfer."
    },
    "TransferType": {
      "type": "string",
      "description": "* `NONE` - Transfer between platforms within one station\n* `WALKING` - Transfer by walk\n* `PUBLIC_TRANSPORT` - Public transportation transfer\n",
      "enum": [
        "NONE",
        "WALKING",
        "PUBLIC_TRANSPORT"
      ]
    },
    "TransfersInfo": {
      "type": "object",
      "required": [
        "info",
        "transfers"
      ],
      "properties": {
        "info": {
          "type": "string",
          "example": "Connections planned as follow-up in event of delay there can happen re-reservation to follow-up connection or refund money for unused part of route",
          "description": "Accompanying informations about transfers"
        },
        "transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transfer"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "accountCode": {
          "type": "string",
          "example": "8838350718",
          "description": "Used as account ID for login"
        },
        "firstName": {
          "type": "string",
          "example": "First"
        },
        "surname": {
          "type": "string",
          "example": "Passenger"
        },
        "phoneNumber": {
          "type": "string",
          "example": 420777222666
        },
        "restrictPhoneNumbers": {
          "type": "boolean",
          "description": "Restrict phone number for work with sms.",
          "default": false
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "first.passenger@gmail.com"
        },
        "credit": {
          "type": "number",
          "example": 50,
          "description": "Account balance"
        },
        "creditPrice": {
          "type": "boolean",
          "description": "Difference between registered credit account with price advantage and regular unregistered open account",
          "default": true
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "defaultTariffKey": {
          "type": "string",
          "example": "REGULAR",
          "description": "Set tariff which would be pre-filled after login"
        },
        "notifications": {
          "$ref": "#/definitions/Notifications"
        },
        "companyInformation": {
          "type": "boolean",
          "default": false
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "conditionsAcceptance": {
          "type": "boolean",
          "description": "Acceptance of transport conditions and personal data protection",
          "default": false
        },
        "employeeNumber": {
          "type": "integer",
          "example": 11111,
          "description": "NULL for normal customer, internal number for Regiojet employee"
        }
      }
    },
    "Vehicle_1_1_0": {
      "type": "object",
      "required": [
        "freeSeats",
        "seatClasses",
        "vehicleId",
        "vehicleNumber",
        "vehicleStandardKey"
      ],
      "properties": {
        "vehicleId": {
          "type": "integer",
          "format": "int64",
          "example": 3789624138
        },
        "code": {
          "type": "string",
          "description": "Vehicle code tag (BUS => SPZ, VAGON => code)"
        },
        "layoutURL": {
          "type": "string"
        },
        "horizontalLayoutURL": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/VehicleType"
        },
        "vehicleStandardKey": {
          "type": "string",
          "example": "YELLOW",
          "description": "Vehicle standard code tag"
        },
        "services": {
          "type": "array",
          "description": "Supported services icons (wifi, etc.)",
          "items": {
            "type": "string",
            "example": "wifi"
          }
        },
        "vehicleNumber": {
          "type": "integer",
          "example": 7
        },
        "seatClasses": {
          "type": "array",
          "description": "Available classes in this vehicle",
          "items": {
            "type": "string",
            "example": ""
          }
        },
        "notifications": {
          "type": "array",
          "example": [
            "You've chosen seat on line where you wont be accompanied by steward(ess). Bus driver will ensure check-in, safe and nothing disturbed travel. Connection will be operated by air-conditioned bus with toilet and services like wifi, newspapers or fun portal (depend on bus type)."
          ],
          "description": "Additional informations relating to whole vehicle. These informations are visible, but wont requiring confirmation.",
          "items": {
            "type": "string"
          }
        },
        "freeSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Seat"
          }
        }
      }
    },
    "Vehicle": {
      "type": "object",
      "required": [
        "decks",
        "id",
        "number",
        "seatClasses",
        "standard"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3789624138
        },
        "code": {
          "type": "string",
          "description": "Vehicle code tag (BUS => SPZ, VAGON => code)"
        },
        "type": {
          "$ref": "#/definitions/VehicleType"
        },
        "number": {
          "type": "integer",
          "example": 7
        },
        "seatClasses": {
          "type": "array",
          "description": "Available services in this vehicle",
          "items": {
            "$ref": "#/definitions/VehicleSeatClass"
          }
        },
        "standard": {
          "type": "string",
          "example": "YELLOW",
          "description": "Vehicle standard code tag"
        },
        "notifications": {
          "type": "array",
          "example": [
            "You've chosen seat on line where you wont be accompanied by steward(ess). Bus driver will ensure check-in, safe and nothing disturbed travel. Connection will be operated by air-conditioned bus with toilet and services like wifi, newspapers or fun portal (depend on bus type)."
          ],
          "description": "Additional informations relating to whole vehicle. These informations are visible, but wont requiring confirmation.",
          "items": {
            "type": "string"
          }
        },
        "cateringEnabled": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if catering is enabled in current vehicle (i.e. it is possible for a customer to place catering order)."
        },
        "decks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleDeck"
          }
        }
      }
    },
    "VehicleStandard": {
      "type": "object",
      "required": [
        "description",
        "imageUrl",
        "key",
        "name",
        "supportImageUrl"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "YELLOW",
          "description": "Vehicle standard key that will be used in responses from other endpoints."
        },
        "name": {
          "type": "string",
          "example": "2nd Class",
          "description": "Vehicle standard name."
        },
        "description": {
          "type": "string",
          "example": "Open space or compartment air-conditioned coaches, Wi-Fi internet for free, 230 V electric sockets.",
          "description": "Vehicle standard description."
        },
        "imageUrl": {
          "type": "string",
          "example": "https://brn-ybus-privapi.sa.cz/resources/standard/yellow.png",
          "description": "URL to vehicle standard thumbnail image."
        },
        "supportImageUrl": {
          "type": "string",
          "example": "https://brn-ybus-privapi.sa.cz/resources/standard/yellow_support.png",
          "description": "URL to support vehicle thumbnail image."
        },
        "galleryUrl": {
          "type": "string",
          "example": "https://www.regiojet.com/services/services-on-board-of-trains/",
          "description": "URL to publicly available information about vehicle standard."
        }
      }
    },
    "VehicleType": {
      "type": "string",
      "enum": [
        "BUS",
        "TRAIN"
      ]
    },
    "VehicleSeatClass": {
      "type": "object",
      "required": [
        "name",
        "services"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "C1"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeatClassService"
          }
        }
      }
    },
    "SeatClassService": {
      "type": "object",
      "required": [
        "code",
        "imageCode",
        "name"
      ],
      "properties": {
        "code": {
          "type": "string",
          "example": "Vuz B (66)-C0-Wi-Fi"
        },
        "name": {
          "type": "string",
          "example": "Wi-Fi"
        },
        "imageCode": {
          "type": "string",
          "example": "typy_vozidel_wifi_ano"
        }
      }
    },
    "VehicleDeck": {
      "required": [
        "freeSeats",
        "name",
        "number",
        "occupiedSeats"
      ],
      "properties": {
        "number": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "layoutURL": {
          "type": "string"
        },
        "horizontalLayoutURL": {
          "type": "string"
        },
        "freeSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Seat"
          }
        },
        "occupiedSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Seat"
          }
        }
      }
    },
    "SroRoute": {
      "type": "object",
      "required": [
        "arrivalTime",
        "connectionCode",
        "departureStationId",
        "departureTime",
        "id",
        "notices",
        "priceFrom",
        "pricesCount",
        "support",
        "vehicleTypes"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5414629798,5414629795, ... ",
          "description": "Comma-separated list of route section identifiers."
        },
        "connectionCode": {
          "type": "string",
          "example": "1121",
          "description": "Connection code, as recognized by an external entity (e.g. OneTicket), not bound to any format."
        },
        "departureStationId": {
          "type": "integer",
          "format": "int64",
          "example": 4987881000,
          "description": "Numeric and unique representation of the departure station."
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-11-18T09:41:00.000+02:00",
          "description": "Departure time in the ISO 8601 format."
        },
        "arrivalStationId": {
          "type": "integer",
          "format": "int64",
          "example": 4961583004,
          "description": "Numeric and unique representation of the arrival station."
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2020-11-18T10:41:00.000+02:00",
          "description": "Arrival time in the ISO 8601 format."
        },
        "vehicleTypes": {
          "type": "array",
          "example": [
            "train",
            "bus"
          ],
          "description": "Array of vehicle types.",
          "items": {
            "$ref": "#/definitions/VehicleType"
          }
        },
        "transfersCount": {
          "type": "integer",
          "example": 0,
          "description": "Number of transfers."
        },
        "priceFrom": {
          "type": "number",
          "example": 169,
          "description": "Price of the least expensive route."
        },
        "priceTo": {
          "type": "number",
          "example": 1209,
          "description": "Price of the most expensive route."
        },
        "pricesCount": {
          "type": "integer",
          "example": 2,
          "description": "Number of returned prices."
        },
        "notices": {
          "type": "boolean",
          "description": "Are there any traffic limitations or extraordinary events on the route?"
        },
        "support": {
          "type": "boolean",
          "description": "Does this line have a support connection?"
        },
        "nationalTrip": {
          "type": "boolean",
          "description": "Is this trip international?"
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Information about the first delay on the route in the 'HH:MM \\h' format."
        },
        "travelTime": {
          "type": "string",
          "example": "03:30 h",
          "description": "Travel time in the 'HH:MM \\h' format."
        },
        "vehicleStandardKey": {
          "type": "string",
          "example": "FUN_RELAX",
          "description": "Vehicle standard code."
        }
      }
    },
    "SroRouteDetail": {
      "type": "object",
      "required": [
        "id",
        "priceClasses"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "{section0.id},{section1.id}, ..."
        },
        "priceClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SroPriceClass"
          }
        }
      }
    },
    "SroPriceClass": {
      "type": "object",
      "required": [
        "conditions",
        "freeSeatsCount",
        "numberOfPassengers",
        "price",
        "priceSource",
        "seatClassKey"
      ],
      "properties": {
        "seatClassKey": {
          "type": "string",
          "example": "C0",
          "description": "Seat class code."
        },
        "freeSeatsCount": {
          "type": "integer",
          "example": 133
        },
        "price": {
          "type": "number",
          "example": 35
        },
        "priceSource": {
          "type": "string",
          "example": "PHN-BHN_ONLINE_RJ_SRO_449356704_C0_CZK_HIGH_50_1820513028"
        },
        "numberOfPassengers": {
          "type": "integer",
          "example": 1
        },
        "conditions": {
          "$ref": "#/definitions/SroPriceConditions"
        }
      }
    },
    "SroPriceConditions": {
      "type": "object",
      "required": [
        "cancelCharge",
        "cancelCharges",
        "descriptions",
        "refundToOriginalSourcePossible"
      ],
      "properties": {
        "descriptions": {
          "$ref": "#/definitions/SroPriceConditionsDescriptions"
        },
        "refundToOriginalSourcePossible": {
          "type": "boolean",
          "example": false
        },
        "cancelCharge": {
          "type": "number",
          "example": 5
        },
        "cancelCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SroCancelCharge"
          }
        }
      }
    },
    "SroCancelCharge": {
      "type": "object",
      "required": [
        "amount",
        "currency",
        "message",
        "percent"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Storno místenky"
        },
        "amount": {
          "type": "number",
          "example": 5
        },
        "currency": {
          "type": "string",
          "example": "CZK"
        },
        "percent": {
          "type": "integer",
          "example": 15
        }
      }
    },
    "SroPriceConditionsDescriptions": {
      "type": "object",
      "required": [
        "coolingOff",
        "departureCancel",
        "expiration"
      ],
      "properties": {
        "coolingOff": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "15 minut po zaplacení: 0%"
          }
        },
        "departureCancel": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "15 minut do odjezdu: 0%"
          }
        },
        "expiration": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "15 minut po rezervaci"
          }
        }
      }
    },
    "SroPassengersDataResponse": {
      "type": "object",
      "required": [
        "mandatory",
        "optional"
      ],
      "properties": {
        "mandatory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassengersDataResponse"
          }
        },
        "optional": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassengersDataResponse"
          }
        }
      }
    },
    "CreateSroTicketsRequest": {
      "type": "object",
      "required": [
        "agreeWithTerms",
        "externalId",
        "ticketRequests"
      ],
      "properties": {
        "agreeWithTerms": {
          "type": "boolean",
          "example": true
        },
        "ticketRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SroTicketRequest"
          }
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "SroTicketRequest": {
      "type": "object",
      "required": [
        "passengers",
        "priceSourceId",
        "routeId",
        "seatClass",
        "sections"
      ],
      "properties": {
        "routeId": {
          "type": "string",
          "example": "3804436614"
        },
        "priceSourceId": {
          "type": "string",
          "example": "PHN-BHN_ONLINE_RJ_SRO_449356704_C0_CZK_NORMAL_35_1084776538"
        },
        "seatClass": {
          "type": "string",
          "example": "C0"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SroTicketSections"
          }
        },
        "passengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SroTicketPassenger"
          }
        }
      }
    },
    "SroTicketSections": {
      "type": "object",
      "required": [
        "section",
        "selectedSeats"
      ],
      "properties": {
        "section": {
          "$ref": "#/definitions/SroTicketSection"
        },
        "selectedSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SroTicketSelectedSeat"
          }
        }
      }
    },
    "SroTicketSection": {
      "type": "object",
      "required": [
        "fromStationId",
        "sectionId",
        "toStationId"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3804436614
        },
        "fromStationId": {
          "type": "integer",
          "format": "int64",
          "example": 3804436614
        },
        "toStationId": {
          "type": "integer",
          "format": "int64",
          "example": 10204002
        }
      }
    },
    "SroTicketSelectedSeat": {
      "type": "object",
      "required": [
        "seatIndex",
        "sectionId",
        "vehicleNumber"
      ],
      "properties": {
        "sectionId": {
          "type": "integer",
          "format": "int64",
          "example": 3804436614
        },
        "vehicleNumber": {
          "type": "integer",
          "example": 7
        },
        "seatIndex": {
          "type": "integer",
          "example": 15
        }
      }
    },
    "SroTicketPassenger": {
      "type": "object",
      "required": [
        "address",
        "amount",
        "dateOfBirth",
        "email",
        "firstName",
        "id",
        "lastName",
        "moneyBack",
        "personalId",
        "phone"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3895574004
        },
        "firstName": {
          "type": "string",
          "example": "First"
        },
        "lastName": {
          "type": "string",
          "example": "Passenger"
        },
        "phone": {
          "type": "string",
          "example": 420777666777
        },
        "email": {
          "type": "string",
          "example": "first.passenger@email.com"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "example": "1988-07-21"
        },
        "address": {
          "type": "string"
        },
        "personalId": {
          "type": "string",
          "example": "45678877"
        },
        "amount": {
          "type": "string",
          "example": "100"
        },
        "moneyBack": {
          "type": "string",
          "example": "90"
        }
      }
    },
    "SroTicket": {
      "type": "object",
      "required": [
        "affiliateTicket",
        "bills",
        "conditions",
        "currency",
        "customerActions",
        "delay",
        "estimatedArrivalTime",
        "passengersInfo",
        "paymentId",
        "price",
        "routeSections",
        "seatClassKey",
        "sroTicketId",
        "state",
        "travelTime",
        "unpaid"
      ],
      "properties": {
        "sroTicketId": {
          "type": "integer",
          "format": "int64",
          "example": 1320454002
        },
        "price": {
          "type": "number",
          "example": 540,
          "description": "Final price for ticket, addons etc."
        },
        "unpaid": {
          "type": "number",
          "example": 540,
          "description": "Final price to be paid"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "state": {
          "$ref": "#/definitions/TicketState"
        },
        "seatClassKey": {
          "type": "string",
          "example": "C1"
        },
        "conditions": {
          "$ref": "#/definitions/SroConditions"
        },
        "customerActions": {
          "$ref": "#/definitions/CustomerActions"
        },
        "routeSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketSection"
          }
        },
        "paymentId": {
          "type": "integer",
          "format": "int64"
        },
        "bills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketBill"
          }
        },
        "passengersInfo": {
          "$ref": "#/definitions/SroPassengersInfo"
        },
        "delay": {
          "type": "string",
          "example": "00:15 h",
          "description": "Textual information about the first delay on the route."
        },
        "travelTime": {
          "type": "string",
          "example": "01:10 h",
          "description": "Textual information about the travel time on a given section."
        },
        "estimatedArrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2018-02-17T00:50:00.000+02:00"
        },
        "affiliateTicket": {
          "type": "boolean",
          "description": "Was the ticket created by an affiliate partner?"
        }
      }
    },
    "SroPassengersInfo": {
      "type": "object",
      "required": [
        "passengers"
      ],
      "properties": {
        "passengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Passenger"
          }
        }
      }
    },
    "SroConditions": {
      "type": "object",
      "required": [
        "cancellationFee",
        "coolingOff",
        "departureCancel",
        "expiration"
      ],
      "properties": {
        "coolingOff": {
          "type": "string",
          "format": "date-time",
          "description": "CoolingOff Time for sro ticket"
        },
        "departureCancel": {
          "type": "string",
          "format": "date-time",
          "description": "Departure Cancel Time for sro ticket"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration Time for sro ticket"
        },
        "cancellationFee": {
          "type": "number",
          "example": 50,
          "description": "Cancellation Fee price for sro ticket, addons etc."
        }
      }
    },
    "SroTicketBookingResponse": {
      "type": "object",
      "required": [
        "accountCode",
        "sroTickets"
      ],
      "properties": {
        "accountCode": {
          "type": "string",
          "example": "3455828009",
          "description": "Ticket number that customer need during checkin on board."
        },
        "sroTickets": {
          "type": "array",
          "description": "Information about the newly created ticket.",
          "items": {
            "$ref": "#/definitions/SroTicket"
          }
        }
      }
    },
    "inline_response_400_errorFields": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "stationType",
          "description": "Name of parameter, where error occured."
        },
        "value": {
          "type": "string",
          "example": "AIRPORT",
          "description": "Erroneous value."
        }
      }
    },
    "inline_response_400": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Unknown station type",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inline_response_400_errorFields"
          }
        }
      }
    },
    "inline_response_400_1": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Ticket is in invalid state.",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "inline_response_400_2": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "It is not possible to search connections so far to future",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "inline_response_400_3": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Not enough free seats available",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "inline_response_400_4": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Bus/train could not be found. Please search again.",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "example": {
            "key": "FREE",
            "value": "Tariff name is incorrect. Please search for the bus/train again."
          },
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "inline_response_400_5": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid request",
          "description": "Error message."
        },
        "errorFields": {
          "type": "array",
          "example": {
            "key": "agreeWithTerms",
            "value": "You have to agree with the terms."
          },
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    }
  },
  "parameters": {
    "xApplicationOrigin": {
      "name": "X-Application-Origin",
      "in": "header",
      "description": "Application origin - APP - Mobile application (Android / Apple) - AFF - Affiliate application which is managed by third party - CAT - Web application used to sell catering - DEV - Only for development and testing - DOT - Check-in application for ticket sales on a train or bus - NOT - Unknown application type",
      "required": false,
      "type": "string",
      "default": "AFF",
      "enum": [
        "APP",
        "AFF",
        "CAT",
        "OCT",
        "DEV",
        "DOT",
        "NOT",
        "WEB"
      ]
    },
    "xLang": {
      "name": "X-Lang",
      "in": "header",
      "description": "A two-letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\nDefines the language into which the response will be translated.\n\nCurrently supported languages:\n\n| ISO language name | ISO 639-1 code |\n|-------------------|----------------|\n| Czech             | cs             |\n| German            | de             |\n| English           | en             |\n| Spanish           | es             |\n| French            | fr             |\n| Hungarian         | hu             |\n| Russian           | ru             |\n| Slovak            | sk             |\n| Ukrainian         | uk             |\n| Chinese           | zh             |\n",
      "required": false,
      "type": "string",
      "default": "en",
      "enum": [
        "cs",
        "de",
        "en",
        "es",
        "fr",
        "hu",
        "ru",
        "sk",
        "uk",
        "zh"
      ]
    },
    "xCurrency": {
      "name": "X-Currency",
      "in": "header",
      "description": "A three-letter currency code from [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\nDefines monetary unit to be used in respons.\n\nCurrently supported currencies:\n\n| Currency     | ISO 4217 code |\n|--------------|---------------|\n| Czech koruna | CZK           |\n| Euro         | EUR           |\n",
      "required": false,
      "type": "string",
      "default": "EUR",
      "enum": [
        "CZK",
        "EUR"
      ]
    },
    "xTxToken": {
      "name": "X-TxToken",
      "in": "header",
      "description": "Internal ID of the operation - used for check status 204.",
      "required": true,
      "type": "string",
      "maxLength": 10,
      "minLength": 8
    },
    "accountCode": {
      "name": "accountCode",
      "in": "path",
      "description": "Unique code for the customer's account.\n\nTo obtain account code you should go through these two steps:\n  1. Create new ticket using endpoint `tickets/create`. This endpoint will return `token` in response, which you should use in the step 2.\n  2. Authenticate user's token using endpoint `users/authenticate`, which will return `accountCode` in response.\n",
      "required": true,
      "type": "string"
    },
    "tariffs": {
      "name": "tariffs",
      "in": "query",
      "description": "List of tariffs. Tariff keys can be obtained from `/consts/tariffs`. Multiple parameter instances should be used rather than multiple values when submitting multiple values. For example: `&tariffs=REGULAR&tariffs=ISIC`",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "default": "REGULAR"
    },
    "ticketId": {
      "name": "ticketId",
      "in": "path",
      "description": "Unique identifier for the ticket.",
      "required": true,
      "type": "integer",
      "format": "int64"
    },
    "routeId": {
      "name": "routeId",
      "in": "path",
      "description": "Unique identifier for the route. It consists of route section identifiers separed by commas (e.g. `section0.id,section1.id,section2.id`).",
      "required": true,
      "type": "string"
    },
    "ticketType": {
      "name": "ticketType",
      "in": "path",
      "description": "Ticket type.",
      "required": true,
      "type": "string",
      "enum": [
        "RJ_SEAT",
        "RJ_TIME",
        "RJ_SRO"
      ]
    },
    "seatClass": {
      "name": "seatClass",
      "in": "query",
      "description": "Seat class.",
      "required": false,
      "type": "integer",
      "default": 2,
      "enum": [
        1,
        2
      ]
    },
    "numberOfPassengers": {
      "name": "numberOfPassengers",
      "in": "query",
      "description": "Number of passengers.",
      "required": false,
      "type": "integer",
      "default": 1
    },
    "fromStation": {
      "name": "fromStationId",
      "in": "query",
      "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
      "required": true,
      "type": "integer",
      "format": "int64",
      "x-example": 17797001
    },
    "toStation": {
      "name": "toStationId",
      "in": "query",
      "description": "Unique identifier for `from` station. Detailed data for identifier can be obtained from `/consts/locations` endpoint.",
      "required": true,
      "type": "integer",
      "format": "int64",
      "x-example": 10204002
    },
    "departureDate": {
      "name": "departureDate",
      "in": "query",
      "description": "Date and time of departure. Date is required. Time is optional.",
      "required": false,
      "type": "string",
      "default": "now()",
      "format": "date-time"
    },
    "txToken": {
      "name": "X-TxToken",
      "in": "header",
      "description": "Token (hash) identifier of transaction.",
      "required": false,
      "type": "string"
    }
  },
  "responses": {
    "200": {
      "description": "Everything worked as expected.",
      "schema": {
        "$ref": "#/definitions/SuccessResponse"
      }
    },
    "201": {
      "description": "One or more new resources have been successfully created.",
      "schema": {
        "$ref": "#/definitions/SuccessResponse"
      }
    },
    "204": {
      "description": "No content"
    },
    "400": {
      "description": "The request was unacceptable, often due to invalid parameter value or due to missing a required parameter.",
      "schema": {
        "$ref": "#/definitions/BadRequestResponse"
      }
    },
    "401": {
      "description": "No valid credentials or token provided.",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponse"
      }
    },
    "403": {
      "description": "Permissions denied",
      "schema": {
        "$ref": "#/definitions/ForbiddenResponse"
      }
    }
  }
}